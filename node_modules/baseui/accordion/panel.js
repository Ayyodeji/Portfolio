"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _index = require("../locale/index.js");

var _overrides = require("../helpers/overrides.js");

var _plus = _interopRequireDefault(require("../icon/plus.js"));

var _checkIndeterminate = _interopRequireDefault(require("../icon/check-indeterminate.js"));

var _styledComponents = require("./styled-components.js");

var _focusVisible = require("../utils/focusVisible.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Panel = /*#__PURE__*/function (_React$Component) {
  _inherits(Panel, _React$Component);

  var _super = _createSuper(Panel);

  function Panel() {
    var _this;

    _classCallCheck(this, Panel);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      isFocusVisible: false
    });

    _defineProperty(_assertThisInitialized(_this), "handleFocus", function (event) {
      if ((0, _focusVisible.isFocusVisible)(event)) {
        _this.setState({
          isFocusVisible: true
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleBlur", function (event) {
      if (_this.state.isFocusVisible !== false) {
        _this.setState({
          isFocusVisible: false
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onClick", function (e) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          expanded = _this$props.expanded,
          onChange = _this$props.onChange,
          onClick = _this$props.onClick;

      if (disabled) {
        return;
      }

      typeof onChange === 'function' && onChange({
        expanded: !expanded
      });
      typeof onClick === 'function' && onClick(e);
      return;
    });

    _defineProperty(_assertThisInitialized(_this), "onKeyDown", function (e) {
      var _this$props2 = _this.props,
          disabled = _this$props2.disabled,
          expanded = _this$props2.expanded,
          onChange = _this$props2.onChange,
          onKeyDown = _this$props2.onKeyDown;

      if (disabled) {
        return;
      }

      var ENTER = 13;
      var SPACE = 32;

      if (e.keyCode === ENTER || e.keyCode === SPACE) {
        typeof onChange === 'function' && onChange({
          expanded: !expanded
        });

        if (e.keyCode === SPACE) {
          e.preventDefault(); // prevent jumping scroll when using Space
        }
      }

      typeof onKeyDown === 'function' && onKeyDown(e);
      return;
    });

    return _this;
  }

  _createClass(Panel, [{
    key: "getSharedProps",
    value: function getSharedProps() {
      var _this$props3 = this.props,
          disabled = _this$props3.disabled,
          expanded = _this$props3.expanded;
      return {
        $disabled: disabled,
        $expanded: expanded,
        $isFocusVisible: this.state.isFocusVisible
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props4 = this.props,
          expanded = _this$props4.expanded,
          disabled = _this$props4.disabled,
          _this$props4$override = _this$props4.overrides,
          overrides = _this$props4$override === void 0 ? {} : _this$props4$override,
          children = _this$props4.children,
          ariaControls = _this$props4['aria-controls'],
          title = _this$props4.title,
          renderPanelContent = _this$props4.renderPanelContent,
          renderAll = _this$props4.renderAll;
      var sharedProps = this.getSharedProps();
      var PanelContainerOverride = overrides.PanelContainer,
          HeaderOverride = overrides.Header,
          ContentOverride = overrides.Content,
          ToggleIconOverride = overrides.ToggleIcon;

      var _getOverrides = (0, _overrides.getOverrides)(PanelContainerOverride, _styledComponents.PanelContainer),
          _getOverrides2 = _slicedToArray(_getOverrides, 2),
          PanelContainer = _getOverrides2[0],
          panelContainerProps = _getOverrides2[1];

      var _getOverrides3 = (0, _overrides.getOverrides)(HeaderOverride, _styledComponents.Header),
          _getOverrides4 = _slicedToArray(_getOverrides3, 2),
          Header = _getOverrides4[0],
          headerProps = _getOverrides4[1];

      var _getOverrides5 = (0, _overrides.getOverrides)(ContentOverride, _styledComponents.Content),
          _getOverrides6 = _slicedToArray(_getOverrides5, 2),
          Content = _getOverrides6[0],
          contentProps = _getOverrides6[1];

      var toggleIconOverrides = (0, _overrides.mergeOverrides)({
        Svg: {
          component: _styledComponents.ToggleIcon
        }
      }, // $FlowFixMe
      {
        Svg: ToggleIconOverride
      });
      return /*#__PURE__*/React.createElement(_index.LocaleContext.Consumer, null, function (locale) {
        return /*#__PURE__*/React.createElement(PanelContainer, _extends({}, sharedProps, panelContainerProps), /*#__PURE__*/React.createElement(Header, _extends({
          tabIndex: 0,
          role: "button",
          "aria-expanded": expanded,
          "aria-disabled": disabled || null
        }, sharedProps, headerProps, ariaControls ? {
          'aria-controls': ariaControls
        } : {}, {
          onClick: _this2.onClick,
          onKeyDown: _this2.onKeyDown,
          onFocus: (0, _focusVisible.forkFocus)(headerProps, _this2.handleFocus),
          onBlur: (0, _focusVisible.forkBlur)(headerProps, _this2.handleBlur)
        }), title, expanded ? /*#__PURE__*/React.createElement(_checkIndeterminate.default, _extends({
          size: 16,
          title: locale.accordion.collapse
        }, sharedProps, {
          overrides: toggleIconOverrides
        })) : /*#__PURE__*/React.createElement(_plus.default, _extends({
          size: 16,
          title: locale.accordion.expand
        }, sharedProps, {
          overrides: toggleIconOverrides
        }))), /*#__PURE__*/React.createElement(Content, _extends({}, sharedProps, contentProps, ariaControls ? {
          id: ariaControls
        } : {}), expanded || renderPanelContent || renderAll ? children : null));
      });
    }
  }]);

  return Panel;
}(React.Component);

_defineProperty(Panel, "defaultProps", {
  disabled: false,
  expanded: false,
  onChange: function onChange() {},
  onClick: function onClick() {},
  onKeyDown: function onKeyDown() {},
  title: ''
});

var _default = Panel;
exports.default = _default;