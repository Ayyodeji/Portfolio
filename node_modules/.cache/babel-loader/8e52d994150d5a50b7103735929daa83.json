{"ast":null,"code":"import { Component, createContext, createElement, forwardRef, useContext, useRef } from 'react';\nimport { driver, getInitialStyle } from 'styletron-standard';\n/* eslint-env browser */\n\n/* global module */\n\nfunction addDebugMetadata(instance, stackIndex) {\n  var _ref = new Error(\"stacktrace source\"),\n      stack = _ref.stack,\n      stacktrace = _ref.stacktrace,\n      message = _ref.message;\n\n  instance.debug = {\n    stackInfo: {\n      stack: stack,\n      stacktrace: stacktrace,\n      message: message\n    },\n    stackIndex: stackIndex\n  };\n} // DEVTOOLS SETUP\n\n\nvar setupDevtoolsExtension = function setupDevtoolsExtension() {\n  var atomicMap = {};\n  var extensionsMap = new Map();\n  var stylesMap = new Map();\n\n  var getStyles = function getStyles(className) {\n    var styles = {};\n\n    if (typeof className !== \"string\") {\n      return styles;\n    }\n\n    if (stylesMap.has(className)) {\n      styles.styles = stylesMap.get(className);\n      var classList = className.split(\" \");\n\n      if (classList.length) {\n        var classes = {};\n        classList.forEach(function (singleClassName) {\n          classes[singleClassName] = atomicMap[singleClassName];\n        });\n        styles.classes = classes;\n      }\n\n      if (extensionsMap.has(className)) {\n        var extension = extensionsMap.get(className);\n        styles.extends = extension;\n      }\n\n      return styles;\n    }\n  };\n\n  window.__STYLETRON_DEVTOOLS__ = {\n    atomicMap: atomicMap,\n    extensionsMap: extensionsMap,\n    stylesMap: stylesMap,\n    getStyles: getStyles\n  };\n};\n\nvar BrowserDebugEngine = /*#__PURE__*/function () {\n  function BrowserDebugEngine(worker) {\n    if (!worker) {\n      var workerBlob = new Blob([\"importScripts(\\\"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/worker.js\\\")\"], {\n        type: \"application/javascript\"\n      });\n      worker = new Worker(URL.createObjectURL(workerBlob));\n      worker.postMessage({\n        id: \"init_wasm\",\n        url: \"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/mappings.wasm\"\n      });\n      worker.postMessage({\n        id: \"set_render_interval\",\n        interval: 120\n      });\n\n      if (module.hot) {\n        module.hot.addStatusHandler(function (status) {\n          if (status === \"dispose\") {\n            worker.postMessage({\n              id: \"invalidate\"\n            });\n          }\n        });\n      }\n    }\n\n    this.worker = worker;\n    this.counter = 0;\n\n    this.worker.onmessage = function (msg) {\n      var _msg$data = msg.data,\n          id = _msg$data.id,\n          css = _msg$data.css;\n\n      if (id === \"render_css\" && css) {\n        var style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(css));\n        document.head.appendChild(style);\n      }\n    };\n  }\n\n  var _proto = BrowserDebugEngine.prototype;\n\n  _proto.debug = function debug(_ref2) {\n    var stackIndex = _ref2.stackIndex,\n        stackInfo = _ref2.stackInfo;\n    var className = \"__debug-\" + this.counter++;\n    this.worker.postMessage({\n      id: \"add_mapped_class\",\n      className: className,\n      stackInfo: stackInfo,\n      stackIndex: stackIndex\n    });\n    return className;\n  };\n\n  return BrowserDebugEngine;\n}();\n\nvar DebugEngine = BrowserDebugEngine;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/* eslint-env browser */\n\n/* eslint-disable no-unused-vars, no-redeclare, no-shadow */\n\n\nvar noopEngine = {\n  renderStyle: function renderStyle() {\n    return \"\";\n  },\n  renderKeyframes: function renderKeyframes() {\n    return \"\";\n  },\n  renderFontFace: function renderFontFace() {\n    return \"\";\n  }\n};\nvar StyletronContext = createContext(noopEngine);\nvar HydrationContext = createContext(false);\nvar DebugEngineContext = createContext();\nvar ThemeContext = createContext();\n\nvar DevProvider = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DevProvider, _React$Component);\n\n  function DevProvider(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n    _this.state = {\n      hydrating: Boolean(props.debugAfterHydration)\n    };\n    return _this;\n  }\n\n  var _proto = DevProvider.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    {\n      if (this.state.hydrating === true) {\n        this.setState({\n          hydrating: false\n        });\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    return createElement(StyletronContext.Provider, {\n      value: this.props.value\n    }, createElement(DebugEngineContext.Provider, {\n      value: this.props.debug\n    }, createElement(HydrationContext.Provider, {\n      value: this.state.hydrating\n    }, this.props.children)));\n  };\n\n  return DevProvider;\n}(Component);\n\nvar Provider = true && process.env.NODE_ENV !== \"production\" ? DevProvider : StyletronContext.Provider;\n\nif (true && process.env.NODE_ENV !== \"production\" && !window.__STYLETRON_DEVTOOLS__) {\n  setupDevtoolsExtension();\n} // TODO: more precise types\n\n\nfunction DevConsumer(props) {\n  return createElement(StyletronContext.Consumer, null, function (styletronEngine) {\n    return createElement(DebugEngineContext.Consumer, null, function (debugEngine) {\n      return createElement(HydrationContext.Consumer, null, function (hydrating) {\n        return props.children(styletronEngine, debugEngine, hydrating);\n      });\n    });\n  });\n}\n\nvar Consumer = true && process.env.NODE_ENV !== \"production\" ? DevConsumer : StyletronContext.Consumer;\n\nfunction checkNoopEngine(engine) {\n  // if no engine provided, we default to no-op, handy for tests\n  // however, print a warning in other envs\n  if (process.env.NODE_ENV !== \"test\") {\n    engine === noopEngine && // eslint-disable-next-line no-console\n    console.warn(process.env.NODE_ENV !== \"production\" ? \"\\nStyletron has been switched to a no-op (test) mode.\\n\\nA Styletron styled component was rendered, but no Styletron engine instance was provided in React context.\\n\\nDid you forget to provide a Styletron engine instance to React context via using the Styletron provider component?\\n\\nNote: Providers and Consumers must come from the exact same React.createContext call to work.\\nIf your app has multiple instances of the \\\"styletron-react\\\" package in your node_module tree,\\nyour Provider may be coming from a different React.createContext call, which means the styled components\\nwill not recieve the provided engine instance. This scenario can arise, for example, when using \\\"npm link\\\".\\n\" : \"Styletron Provider is not set up. Defaulting to no-op.\");\n  }\n}\n\nfunction useStyletron() {\n  var styletronEngine = useContext(StyletronContext);\n  var debugEngine = useContext(DebugEngineContext);\n  var hydrating = useContext(HydrationContext);\n  checkNoopEngine(styletronEngine);\n  var debugClassName = useRef(\"\");\n  var prevDebugClassNameDeps = useRef([]);\n  return [function css(style) {\n    var className = driver(style, styletronEngine);\n\n    if (!(true && process.env.NODE_ENV !== \"production\")) {\n      return className;\n    }\n\n    var _ref = new Error(\"stacktrace source\"),\n        stack = _ref.stack,\n        message = _ref.message;\n\n    var nextDeps = [debugEngine, hydrating];\n\n    if (prevDebugClassNameDeps.current[0] !== nextDeps[0] || prevDebugClassNameDeps.current[1] !== nextDeps[1]) {\n      if (debugEngine && !hydrating) {\n        debugClassName.current = debugEngine.debug({\n          stackInfo: {\n            stack: stack,\n            message: message\n          },\n          stackIndex: 1\n        });\n      }\n\n      prevDebugClassNameDeps.current = nextDeps;\n    }\n\n    if (debugClassName.current) {\n      return debugClassName.current + \" \" + className;\n    }\n\n    return className;\n  }];\n}\n\nfunction createStyled(_ref2) {\n  var getInitialStyle$$1 = _ref2.getInitialStyle,\n      driver$$1 = _ref2.driver,\n      wrapper = _ref2.wrapper;\n\n  function styled(base, styleArg) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (base.__STYLETRON__) {\n        /* eslint-disable no-console */\n        console.warn(\"It appears you are passing a styled component into `styled`.\");\n        console.warn(\"For composition with existing styled components, use `withStyle` or `withTransform` instead.\");\n        /* eslint-enable no-console */\n      }\n    }\n\n    var baseStyletron = {\n      reducers: [],\n      base: base,\n      driver: driver$$1,\n      getInitialStyle: getInitialStyle$$1,\n      wrapper: wrapper\n    };\n\n    if (true && process.env.NODE_ENV !== \"production\") {\n      addDebugMetadata(baseStyletron, 2);\n    }\n\n    return createStyledElementComponent(autoComposeShallow(baseStyletron, styleArg));\n  }\n\n  return styled;\n}\n\nvar styled = createStyled({\n  getInitialStyle: getInitialStyle,\n  driver: driver,\n  wrapper: function wrapper(Component$$1) {\n    return Component$$1;\n  }\n});\n\nfunction withTransform(component, transformer) {\n  var styletron = component.__STYLETRON__;\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    addDebugMetadata(styletron, 2);\n  }\n\n  return createStyledElementComponent(composeDynamic(styletron, transformer));\n}\n\nvar withStyle = withStyleDeep;\n\nfunction withStyleDeep(component, styleArg) {\n  var styletron = component.__STYLETRON__;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\"The first parameter to `withStyle` must be a styled component (without extra wrappers).\");\n      /* eslint-enable no-console */\n    }\n  }\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    addDebugMetadata(styletron, 2);\n    return createStyledElementComponent(addExtension(autoComposeDeep(styletron, styleArg), component, styleArg));\n  } else {\n    return createStyledElementComponent(autoComposeDeep(styletron, styleArg));\n  }\n}\n\nfunction withWrapper(component, wrapper) {\n  var styletron = component.__STYLETRON__;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\"The first parameter to `withWrapper` must be a styled component (without extra wrappers).\");\n      /* eslint-enable no-console */\n    }\n  }\n\n  var composed = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: wrapper,\n    reducers: styletron.reducers\n  };\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    addDebugMetadata(composed, 2);\n  }\n\n  return createStyledElementComponent(composed);\n}\n\nfunction autoComposeShallow(styletron, styleArg) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeShallow(styletron, styleArg);\n  }\n\n  return staticComposeShallow(styletron, styleArg);\n}\n\nfunction addExtension(composed, component, styleArg) {\n  return Object.assign({}, composed, {\n    ext: {\n      with: styleArg,\n      name: component.displayName,\n      base: component.__STYLETRON__.base,\n      getInitialStyle: component.__STYLETRON__.reducers.length ? component.__STYLETRON__.reducers[0].reducer : component.__STYLETRON__.getInitialStyle\n    }\n  });\n}\n\nfunction autoComposeDeep(styletron, styleArg) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeDeep(styletron, styleArg);\n  }\n\n  return staticComposeDeep(styletron, styleArg);\n}\n\nfunction staticComposeShallow(styletron, style) {\n  return composeStatic(styletron, createShallowMergeReducer(style));\n}\n\nfunction staticComposeDeep(styletron, style) {\n  return composeStatic(styletron, createDeepMergeReducer(style));\n}\n\nfunction dynamicComposeShallow(styletron, styleFn) {\n  return composeDynamic(styletron, function (style, props) {\n    return shallowMerge(style, styleFn(props));\n  });\n}\n\nfunction dynamicComposeDeep(styletron, styleFn) {\n  return composeDynamic(styletron, function (style, props) {\n    return deepMerge(style, styleFn(props));\n  });\n}\n\nfunction createShallowMergeReducer(style) {\n  return {\n    reducer: function reducer(inputStyle) {\n      return shallowMerge(inputStyle, style);\n    },\n    assignmentCommutative: true,\n    factory: createShallowMergeReducer,\n    style: style\n  };\n}\n\nfunction createDeepMergeReducer(style) {\n  return {\n    reducer: function reducer(inputStyle) {\n      return deepMerge(inputStyle, style);\n    },\n    assignmentCommutative: true,\n    factory: createDeepMergeReducer,\n    style: style\n  };\n}\n\nfunction composeStatic(styletron, reducerContainer) {\n  if (styletron.reducers.length === 0) {\n    var style = reducerContainer.reducer(styletron.getInitialStyle());\n    var result = {\n      reducers: styletron.reducers,\n      base: styletron.base,\n      driver: styletron.driver,\n      wrapper: styletron.wrapper,\n      getInitialStyle: function getInitialStyle$$1() {\n        return style;\n      }\n    };\n\n    if (true && process.env.NODE_ENV !== \"production\") {\n      result.debug = styletron.debug;\n    }\n\n    return result;\n  } else {\n    var last = styletron.reducers[0];\n\n    if (last.assignmentCommutative === true && reducerContainer.assignmentCommutative === true) {\n      var composed = reducerContainer.reducer(last.style);\n      var _result = {\n        getInitialStyle: styletron.getInitialStyle,\n        base: styletron.base,\n        driver: styletron.driver,\n        wrapper: styletron.wrapper,\n        reducers: [last.factory(composed)].concat(styletron.reducers.slice(1))\n      };\n\n      if (true && process.env.NODE_ENV !== \"production\") {\n        _result.debug = styletron.debug;\n      }\n\n      return _result;\n    }\n\n    return composeDynamic(styletron, reducerContainer.reducer);\n  }\n}\n\nfunction composeDynamic(styletron, reducer) {\n  var composed = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: styletron.wrapper,\n    reducers: [{\n      assignmentCommutative: false,\n      reducer: reducer\n    }].concat(styletron.reducers)\n  };\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    composed.debug = styletron.debug;\n  }\n\n  return composed;\n}\n\nfunction createStyledElementComponent(styletron) {\n  var reducers = styletron.reducers,\n      base = styletron.base,\n      driver$$1 = styletron.driver,\n      wrapper = styletron.wrapper,\n      getInitialStyle$$1 = styletron.getInitialStyle,\n      ext = styletron.ext;\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    var debugStackInfo, debugStackIndex;\n\n    if (styletron.debug) {\n      debugStackInfo = styletron.debug.stackInfo;\n      debugStackIndex = styletron.debug.stackIndex;\n    }\n  }\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    var debugClassName;\n  }\n\n  var StyledElement = forwardRef(function (props, ref) {\n    return createElement(Consumer, null, function (styletron, debugEngine, hydrating) {\n      checkNoopEngine(styletron);\n      var elementProps = omitPrefixedKeys(props);\n      var style = resolveStyle(getInitialStyle$$1, reducers, props);\n\n      if (props.$style) {\n        if (typeof props.$style === \"function\") {\n          style = deepMerge(style, props.$style(props));\n        } else {\n          style = deepMerge(style, props.$style);\n        }\n      }\n\n      var styleClassString = driver$$1(style, styletron);\n      var Element = props.$as ? props.$as : base;\n      elementProps.className = props.className ? props.className + \" \" + styleClassString : styleClassString;\n\n      if (true && process.env.NODE_ENV !== \"production\" && debugEngine && !hydrating) {\n        if (!debugClassName) {\n          debugClassName = debugEngine.debug({\n            stackInfo: debugStackInfo,\n            stackIndex: debugStackIndex\n          });\n        }\n\n        var joined = debugClassName + \" \" + elementProps.className;\n        elementProps.className = joined;\n      }\n\n      if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n        window.__STYLETRON_DEVTOOLS__.stylesMap.set(elementProps.className, style);\n\n        if (ext) {\n          window.__STYLETRON_DEVTOOLS__.extensionsMap.set(elementProps.className, {\n            base: ext.base,\n            displayName: ext.name,\n            initialStyles: ext.getInitialStyle({}, props),\n            styleOverrides: typeof ext.with === \"function\" ? ext.with(props) : ext.with\n          });\n        }\n      }\n\n      if (props.$ref) {\n        // eslint-disable-next-line no-console\n        console.warn(\"The prop `$ref` has been deprecated. Use `ref` instead. Refs are now forwarded with React.forwardRef.\");\n      }\n\n      return createElement(Element, _extends({}, elementProps, {\n        ref: ref || props.$ref\n      }));\n    });\n  });\n  var Wrapped = wrapper(StyledElement);\n  Wrapped.__STYLETRON__ = {\n    base: base,\n    reducers: reducers,\n    driver: driver$$1,\n    wrapper: wrapper,\n    getInitialStyle: getInitialStyle$$1\n  };\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var displayName;\n\n    if (typeof base === \"string\") {\n      displayName = base;\n    } else if (base.displayName) {\n      displayName = base.displayName;\n    } else if (base.name) {\n      displayName = base.name;\n    } else {\n      displayName = \"Unknown\";\n    }\n\n    Wrapped.displayName = \"Styled(\" + displayName + \")\";\n  }\n\n  return Wrapped;\n} // Utility functions\n\n\nfunction resolveStyle(getInitialStyle$$1, reducers, props) {\n  var result = getInitialStyle$$1();\n  var i = reducers.length;\n\n  while (i--) {\n    // Cast to allow passing unused props param in case of static reducer\n    var reducer = reducers[i].reducer;\n    result = reducer(result, props);\n  }\n\n  return result;\n}\n\nfunction isObject(x) {\n  return _typeof(x) === \"object\" && x !== null;\n}\n\nfunction omitPrefixedKeys(source) {\n  var result = {};\n\n  for (var key in source) {\n    if (key[0] !== \"$\") {\n      result[key] = source[key];\n    }\n  }\n\n  return result;\n}\n\nfunction deepMerge(a, b) {\n  var result = assign({}, a);\n\n  for (var key in b) {\n    var val = b[key];\n\n    if (isObject(val) && isObject(a[key])) {\n      result[key] = deepMerge(a[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  return result;\n}\n\nfunction shallowMerge(a, b) {\n  return assign(assign({}, a), b);\n}\n\nfunction assign(target, source) {\n  for (var key in source) {\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nexport { DebugEngine, Provider, DevConsumer, useStyletron, createStyled, styled, withTransform, withStyle, withStyleDeep, withWrapper, autoComposeShallow, autoComposeDeep, staticComposeShallow, staticComposeDeep, dynamicComposeShallow, dynamicComposeDeep, createShallowMergeReducer, createDeepMergeReducer, composeStatic, composeDynamic, createStyledElementComponent, resolveStyle };","map":{"version":3,"sources":["../src/dev-tool.js","../src/index.js"],"names":["stack","stacktrace","message","stackIndex","setupDevtoolsExtension","atomicMap","extensionsMap","stylesMap","getStyles","styles","classList","className","classes","extension","BrowserDebugEngine","workerBlob","URL","module","status","id","css","msg","style","document","debug","stackInfo","DebugEngine","noopEngine","StyletronContext","React","HydrationContext","DebugEngineContext","ThemeContext","DevProvider","Boolean","props","componentDidMount","render","React.createElement","value","hydrating","Provider","window","Consumer","process","styletronEngine","debugEngine","debugClassName","prevDebugClassNameDeps","driver","nextDeps","getInitialStyle","wrapper","base","baseStyletron","createStyledElementComponent","autoComposeShallow","styled","styletron","component","composeDynamic","withStyle","addExtension","autoComposeDeep","composed","reducers","dynamicComposeShallow","staticComposeShallow","dynamicComposeDeep","staticComposeDeep","composeStatic","createShallowMergeReducer","createDeepMergeReducer","shallowMerge","styleFn","deepMerge","reducerContainer","result","last","ext","StyledElement","elementProps","omitPrefixedKeys","resolveStyle","styleClassString","Element","debugStackIndex","joined","with","ref","$ref","Wrapped","i","reducer","x","key","source","assign","val","b","isObject","a"],"mappings":"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","sourcesContent":["/* eslint-env browser */\n/* global module */\n\nexport function addDebugMetadata(instance, stackIndex) {\n  const {stack, stacktrace, message} = new Error(\"stacktrace source\");\n  instance.debug = {\n    stackInfo: {stack, stacktrace, message},\n    stackIndex: stackIndex,\n  };\n}\n\n// DEVTOOLS SETUP\ntype StyletronStyles = {\n  classes?: any,\n  styles?: any,\n  extends?: any,\n};\nexport const setupDevtoolsExtension = () => {\n  const atomicMap = {};\n  const extensionsMap = new Map();\n  const stylesMap = new Map();\n  const getStyles: StyletronStyles = className => {\n    const styles: StyletronStyles = {};\n    if (typeof className !== \"string\") {\n      return styles;\n    }\n    if (stylesMap.has(className)) {\n      styles.styles = stylesMap.get(className);\n      const classList = className.split(\" \");\n      if (classList.length) {\n        const classes = {};\n        classList.forEach(singleClassName => {\n          classes[singleClassName] = atomicMap[singleClassName];\n        });\n        styles.classes = classes;\n      }\n      if (extensionsMap.has(className)) {\n        const extension = extensionsMap.get(className);\n        styles.extends = extension;\n      }\n      return styles;\n    }\n  };\n  window.__STYLETRON_DEVTOOLS__ = {\n    atomicMap,\n    extensionsMap,\n    stylesMap,\n    getStyles,\n  };\n};\n\nclass BrowserDebugEngine {\n  constructor(worker) {\n    if (!worker) {\n      const workerBlob = new Blob(\n        [\n          `importScripts(\"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/worker.js\")`,\n        ],\n        {type: \"application/javascript\"},\n      );\n      worker = new Worker(URL.createObjectURL(workerBlob));\n      worker.postMessage({\n        id: \"init_wasm\",\n        url: \"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/mappings.wasm\",\n      });\n      worker.postMessage({\n        id: \"set_render_interval\",\n        interval: 120,\n      });\n      if (module.hot) {\n        module.hot.addStatusHandler(status => {\n          if (status === \"dispose\") {\n            worker.postMessage({id: \"invalidate\"});\n          }\n        });\n      }\n    }\n    this.worker = worker;\n    this.counter = 0;\n    this.worker.onmessage = msg => {\n      const {id, css} = msg.data;\n      if (id === \"render_css\" && css) {\n        const style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(css));\n        document.head.appendChild(style);\n      }\n    };\n  }\n\n  debug({stackIndex, stackInfo}) {\n    const className = `__debug-${this.counter++}`;\n    this.worker.postMessage({\n      id: \"add_mapped_class\",\n      className,\n      stackInfo,\n      stackIndex,\n    });\n    return className;\n  }\n}\n\nclass NoopDebugEngine {\n  debug() {}\n}\n\nexport const DebugEngine = __BROWSER__ ? BrowserDebugEngine : NoopDebugEngine;\n","// @flow\n/* eslint-env browser */\n/* eslint-disable no-unused-vars, no-redeclare, no-shadow */\n\ndeclare var __DEV__: boolean;\ndeclare var __BROWSER__: boolean;\ndeclare var process: any;\n\nimport * as React from \"react\";\nimport {\n  driver,\n  getInitialStyle,\n  type StandardEngine,\n  type StyleObject,\n} from \"styletron-standard\";\n\nimport type {\n  Styletron,\n  StyletronComponent,\n  ReducerContainer,\n  AssignmentCommutativeReducerContainer,\n  NonAssignmentCommutativeReducerContainer,\n  StyledFn,\n  WithStyleFn,\n  WithTransformFn,\n  WithWrapperFn,\n} from \"./types.js\";\nimport {\n  addDebugMetadata,\n  setupDevtoolsExtension,\n  DebugEngine,\n} from \"./dev-tool.js\";\n\nexport {DebugEngine};\nexport type {StyleObject};\n\nconst noopEngine = {\n  renderStyle: () => \"\",\n  renderKeyframes: () => \"\",\n  renderFontFace: () => \"\",\n};\n\nconst StyletronContext = React.createContext<StandardEngine>(noopEngine);\nconst HydrationContext = React.createContext(false);\nconst DebugEngineContext = React.createContext();\nconst ThemeContext = React.createContext();\n\ntype DevProviderProps = {\n  children: React.Node,\n  value: StandardEngine,\n  debugAfterHydration?: boolean,\n  debug?: any,\n};\n\nclass DevProvider extends React.Component<\n  DevProviderProps,\n  {hydrating: boolean},\n> {\n  constructor(props: DevProviderProps) {\n    super();\n    this.state = {\n      hydrating: Boolean(props.debugAfterHydration),\n    };\n  }\n\n  componentDidMount() {\n    if (__BROWSER__) {\n      if (this.state.hydrating === true) {\n        this.setState({\n          hydrating: false,\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <StyletronContext.Provider value={this.props.value}>\n        <DebugEngineContext.Provider value={this.props.debug}>\n          <HydrationContext.Provider value={this.state.hydrating}>\n            {this.props.children}\n          </HydrationContext.Provider>\n        </DebugEngineContext.Provider>\n      </StyletronContext.Provider>\n    );\n  }\n}\n\nexport const Provider =\n  __BROWSER__ && __DEV__ ? DevProvider : StyletronContext.Provider;\n\nif (__BROWSER__ && __DEV__ && !window.__STYLETRON_DEVTOOLS__) {\n  setupDevtoolsExtension();\n}\n\n// TODO: more precise types\nexport function DevConsumer(props: {children: (any, any, any) => React.Node}) {\n  return (\n    <StyletronContext.Consumer>\n      {styletronEngine => (\n        <DebugEngineContext.Consumer>\n          {debugEngine => (\n            <HydrationContext.Consumer>\n              {hydrating =>\n                props.children(styletronEngine, debugEngine, hydrating)\n              }\n            </HydrationContext.Consumer>\n          )}\n        </DebugEngineContext.Consumer>\n      )}\n    </StyletronContext.Consumer>\n  );\n}\n\nconst Consumer =\n  __BROWSER__ && __DEV__ ? DevConsumer : StyletronContext.Consumer;\n\ntype createStyledOpts = {\n  getInitialStyle: () => StyleObject,\n  driver: typeof driver,\n  wrapper: (\n    React.StatelessFunctionalComponent<any>,\n  ) => React.ComponentType<any>,\n};\n\nfunction checkNoopEngine(engine: StandardEngine) {\n  // if no engine provided, we default to no-op, handy for tests\n  // however, print a warning in other envs\n  if (process.env.NODE_ENV !== \"test\") {\n    engine === noopEngine &&\n      // eslint-disable-next-line no-console\n      console.warn(\n        __DEV__\n          ? `\nStyletron has been switched to a no-op (test) mode.\n\nA Styletron styled component was rendered, but no Styletron engine instance was provided in React context.\n\nDid you forget to provide a Styletron engine instance to React context via using the Styletron provider component?\n\nNote: Providers and Consumers must come from the exact same React.createContext call to work.\nIf your app has multiple instances of the \"styletron-react\" package in your node_module tree,\nyour Provider may be coming from a different React.createContext call, which means the styled components\nwill not recieve the provided engine instance. This scenario can arise, for example, when using \"npm link\".\n`\n          : `Styletron Provider is not set up. Defaulting to no-op.`,\n      );\n  }\n}\n\nexport function useStyletron() {\n  const styletronEngine: StandardEngine = React.useContext(StyletronContext);\n  const debugEngine = React.useContext(DebugEngineContext);\n  const hydrating = React.useContext(HydrationContext);\n  checkNoopEngine(styletronEngine);\n\n  const debugClassName = React.useRef(\"\");\n  const prevDebugClassNameDeps = React.useRef([]);\n\n  return [\n    function css(style: StyleObject) {\n      const className = driver(style, styletronEngine);\n      if (!(__BROWSER__ && __DEV__)) {\n        return className;\n      }\n      const {stack, message} = new Error(\"stacktrace source\");\n\n      const nextDeps = [debugEngine, hydrating];\n      if (\n        prevDebugClassNameDeps.current[0] !== nextDeps[0] ||\n        prevDebugClassNameDeps.current[1] !== nextDeps[1]\n      ) {\n        if (debugEngine && !hydrating) {\n          debugClassName.current = debugEngine.debug({\n            stackInfo: {stack, message},\n            stackIndex: 1,\n          });\n        }\n        prevDebugClassNameDeps.current = nextDeps;\n      }\n\n      if (debugClassName.current) {\n        return `${debugClassName.current} ${className}`;\n      }\n\n      return className;\n    },\n  ];\n}\n\nexport function createStyled({\n  getInitialStyle,\n  driver,\n  wrapper,\n}: createStyledOpts): StyledFn {\n  function styled(base: any, styleArg) {\n    if (__DEV__) {\n      if (base.__STYLETRON__) {\n        /* eslint-disable no-console */\n        console.warn(\n          \"It appears you are passing a styled component into `styled`.\",\n        );\n        console.warn(\n          \"For composition with existing styled components, use `withStyle` or `withTransform` instead.\",\n        );\n        /* eslint-enable no-console */\n      }\n    }\n\n    const baseStyletron: Styletron = {\n      reducers: [],\n      base: base,\n      driver,\n      getInitialStyle,\n      wrapper,\n    };\n\n    if (__BROWSER__ && __DEV__) {\n      addDebugMetadata(baseStyletron, 2);\n    }\n\n    return createStyledElementComponent(\n      autoComposeShallow(baseStyletron, styleArg),\n    );\n  }\n\n  return styled;\n}\n\nexport const styled: StyledFn = createStyled({\n  getInitialStyle,\n  driver,\n  wrapper: Component => Component,\n});\n\ndeclare var withTransform: WithTransformFn;\nexport function withTransform(component, transformer) {\n  const styletron = component.__STYLETRON__;\n\n  if (__BROWSER__ && __DEV__) {\n    addDebugMetadata(styletron, 2);\n  }\n\n  return createStyledElementComponent(composeDynamic(styletron, transformer));\n}\n\ndeclare var withStyle: WithStyleFn;\nexport var withStyle = withStyleDeep;\n\ndeclare var withStyleDeep: WithStyleFn;\nexport function withStyleDeep(component, styleArg) {\n  const styletron = component.__STYLETRON__;\n\n  if (__DEV__) {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\n        \"The first parameter to `withStyle` must be a styled component (without extra wrappers).\",\n      );\n      /* eslint-enable no-console */\n    }\n  }\n\n  if (__BROWSER__ && __DEV__) {\n    addDebugMetadata(styletron, 2);\n    return createStyledElementComponent(\n      addExtension(autoComposeDeep(styletron, styleArg), component, styleArg),\n    );\n  } else {\n    return createStyledElementComponent(autoComposeDeep(styletron, styleArg));\n  }\n}\n\ndeclare var withWrapper: WithWrapperFn;\nexport function withWrapper(component, wrapper) {\n  const styletron = component.__STYLETRON__;\n\n  if (__DEV__) {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\n        \"The first parameter to `withWrapper` must be a styled component (without extra wrappers).\",\n      );\n      /* eslint-enable no-console */\n    }\n  }\n\n  const composed = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: wrapper,\n    reducers: styletron.reducers,\n  };\n\n  if (__BROWSER__ && __DEV__) {\n    addDebugMetadata(composed, 2);\n  }\n\n  return createStyledElementComponent(composed);\n}\n\nexport function autoComposeShallow<Props>(\n  styletron: Styletron,\n  styleArg: StyleObject | (Props => StyleObject),\n) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeShallow(styletron, styleArg);\n  }\n\n  return staticComposeShallow(styletron, styleArg);\n}\n\nfunction addExtension(composed, component, styleArg) {\n  return {\n    ...composed,\n    ext: {\n      with: styleArg,\n      name: component.displayName,\n      base: component.__STYLETRON__.base,\n      getInitialStyle: component.__STYLETRON__.reducers.length\n        ? component.__STYLETRON__.reducers[0].reducer\n        : component.__STYLETRON__.getInitialStyle,\n    },\n  };\n}\n\nexport function autoComposeDeep<Props>(\n  styletron: Styletron,\n  styleArg: StyleObject | (Props => StyleObject),\n) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeDeep(styletron, styleArg);\n  }\n\n  return staticComposeDeep(styletron, styleArg);\n}\n\nexport function staticComposeShallow(styletron: Styletron, style: StyleObject) {\n  return composeStatic(styletron, createShallowMergeReducer(style));\n}\n\nexport function staticComposeDeep(styletron: Styletron, style: StyleObject) {\n  return composeStatic(styletron, createDeepMergeReducer(style));\n}\n\nexport function dynamicComposeShallow<Props>(\n  styletron: Styletron,\n  styleFn: Props => StyleObject,\n) {\n  return composeDynamic(styletron, (style, props) =>\n    shallowMerge(style, styleFn(props)),\n  );\n}\n\nexport function dynamicComposeDeep<Props>(\n  styletron: Styletron,\n  styleFn: Props => StyleObject,\n) {\n  return composeDynamic(styletron, (style, props) =>\n    deepMerge(style, styleFn(props)),\n  );\n}\n\nexport function createShallowMergeReducer(\n  style: StyleObject,\n): AssignmentCommutativeReducerContainer {\n  return {\n    reducer: inputStyle => shallowMerge(inputStyle, style),\n    assignmentCommutative: true,\n    factory: createShallowMergeReducer,\n    style: style,\n  };\n}\n\nexport function createDeepMergeReducer(\n  style: StyleObject,\n): AssignmentCommutativeReducerContainer {\n  return {\n    reducer: inputStyle => deepMerge(inputStyle, style),\n    assignmentCommutative: true,\n    factory: createDeepMergeReducer,\n    style: style,\n  };\n}\n\nexport function composeStatic(\n  styletron: Styletron,\n  reducerContainer: AssignmentCommutativeReducerContainer,\n) {\n  if (styletron.reducers.length === 0) {\n    const style = reducerContainer.reducer(styletron.getInitialStyle());\n    const result: Styletron = {\n      reducers: styletron.reducers,\n      base: styletron.base,\n      driver: styletron.driver,\n      wrapper: styletron.wrapper,\n      getInitialStyle: () => style,\n    };\n    if (__BROWSER__ && __DEV__) {\n      result.debug = styletron.debug;\n    }\n    return result;\n  } else {\n    const last = styletron.reducers[0];\n\n    if (\n      last.assignmentCommutative === true &&\n      reducerContainer.assignmentCommutative === true\n    ) {\n      const composed = reducerContainer.reducer(last.style);\n\n      const result: Styletron = {\n        getInitialStyle: styletron.getInitialStyle,\n        base: styletron.base,\n        driver: styletron.driver,\n        wrapper: styletron.wrapper,\n        reducers: [last.factory(composed)].concat(styletron.reducers.slice(1)),\n      };\n\n      if (__BROWSER__ && __DEV__) {\n        result.debug = styletron.debug;\n      }\n\n      return result;\n    }\n\n    return composeDynamic(styletron, reducerContainer.reducer);\n  }\n}\n\nexport function composeDynamic<Props>(\n  styletron: Styletron,\n  reducer: (StyleObject, Props) => StyleObject,\n) {\n  const composed: Styletron = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: styletron.wrapper,\n    reducers: [{assignmentCommutative: false, reducer}].concat(\n      styletron.reducers,\n    ),\n  };\n  if (__BROWSER__ && __DEV__) {\n    composed.debug = styletron.debug;\n  }\n  return composed;\n}\n\nexport function createStyledElementComponent(styletron: Styletron) {\n  const {reducers, base, driver, wrapper, getInitialStyle, ext} = styletron;\n\n  if (__BROWSER__ && __DEV__) {\n    var debugStackInfo, debugStackIndex;\n    if (styletron.debug) {\n      debugStackInfo = styletron.debug.stackInfo;\n      debugStackIndex = styletron.debug.stackIndex;\n    }\n  }\n\n  if (__BROWSER__ && __DEV__) {\n    var debugClassName;\n  }\n\n  const StyledElement = React.forwardRef((props, ref) => {\n    return (\n      <Consumer>\n        {(styletron, debugEngine, hydrating) => {\n          checkNoopEngine(styletron);\n\n          const elementProps = omitPrefixedKeys(props);\n          let style = resolveStyle(getInitialStyle, reducers, props);\n\n          if (props.$style) {\n            if (typeof props.$style === \"function\") {\n              style = deepMerge(style, props.$style(props));\n            } else {\n              style = deepMerge(style, props.$style);\n            }\n          }\n\n          const styleClassString = driver(style, styletron);\n          const Element = props.$as ? props.$as : base;\n          elementProps.className = props.className\n            ? `${props.className} ${styleClassString}`\n            : styleClassString;\n\n          if (__BROWSER__ && __DEV__ && debugEngine && !hydrating) {\n            if (!debugClassName) {\n              debugClassName = debugEngine.debug({\n                stackInfo: debugStackInfo,\n                stackIndex: debugStackIndex,\n              });\n            }\n\n            const joined = `${debugClassName} ${elementProps.className}`;\n            elementProps.className = joined;\n          }\n\n          if (__BROWSER__ && __DEV__ && window.__STYLETRON_DEVTOOLS__) {\n            window.__STYLETRON_DEVTOOLS__.stylesMap.set(\n              elementProps.className,\n              style,\n            );\n            if (ext) {\n              window.__STYLETRON_DEVTOOLS__.extensionsMap.set(\n                elementProps.className,\n                {\n                  base: ext.base,\n                  displayName: ext.name,\n                  initialStyles: ext.getInitialStyle({}, props),\n                  styleOverrides:\n                    typeof ext.with === \"function\" ? ext.with(props) : ext.with,\n                },\n              );\n            }\n          }\n\n          if (props.$ref) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              \"The prop `$ref` has been deprecated. Use `ref` instead. Refs are now forwarded with React.forwardRef.\",\n            );\n          }\n          return <Element {...elementProps} ref={ref || props.$ref} />;\n        }}\n      </Consumer>\n    );\n  });\n\n  const Wrapped = wrapper(StyledElement);\n  Wrapped.__STYLETRON__ = {\n    base,\n    reducers,\n    driver,\n    wrapper,\n    getInitialStyle,\n  };\n\n  if (__DEV__) {\n    let displayName;\n\n    if (typeof base === \"string\") {\n      displayName = base;\n    } else if (base.displayName) {\n      displayName = base.displayName;\n    } else if (base.name) {\n      displayName = base.name;\n    } else {\n      displayName = \"Unknown\";\n    }\n\n    Wrapped.displayName = `Styled(${displayName})`;\n  }\n\n  return Wrapped;\n}\n\n// Utility functions\n\nexport function resolveStyle(\n  getInitialStyle: void => StyleObject,\n  reducers: Array<ReducerContainer>,\n  props: Object,\n): StyleObject {\n  let result = getInitialStyle();\n  let i = reducers.length;\n  while (i--) {\n    // Cast to allow passing unused props param in case of static reducer\n    const reducer = (reducers[i].reducer: (StyleObject, Object) => StyleObject);\n    result = reducer(result, props);\n  }\n  return result;\n}\n\nfunction isObject(x: any) {\n  return typeof x === \"object\" && x !== null;\n}\n\nfunction omitPrefixedKeys(source) {\n  const result = {};\n\n  for (const key in source) {\n    if (key[0] !== \"$\") {\n      result[key] = source[key];\n    }\n  }\n\n  return result;\n}\n\nfunction deepMerge(a, b) {\n  const result = assign({}, a);\n\n  for (const key in b) {\n    const val = b[key];\n\n    if (isObject(val) && isObject(a[key])) {\n      result[key] = deepMerge(a[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  return result;\n}\n\nfunction shallowMerge(a, b) {\n  return assign(assign({}, a), b);\n}\n\nfunction assign(target, source) {\n  for (const key in source) {\n    target[key] = source[key];\n  }\n  return target;\n}\n"]},"metadata":{},"sourceType":"module"}