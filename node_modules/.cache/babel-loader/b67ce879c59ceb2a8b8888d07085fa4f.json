{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\n\n/* eslint-disable flowtype/no-weak-types */\n\n\nexport default function deepMerge(target) {\n  target = target || {};\n  var len = arguments.length <= 1 ? 0 : arguments.length - 1;\n  var obj;\n  var value;\n\n  for (var i = 0; i < len; i++) {\n    obj = (i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1]) || {};\n\n    for (var key in obj) {\n      if (_typeof(obj[key]) !== undefined) {\n        value = obj[key];\n\n        if (isCloneable(value)) {\n          target[key] = deepMerge(\n          /* eslint-disable-next-line no-mixed-operators */\n          target[key] || Array.isArray(value) && [] || {}, value);\n        } else {\n          target[key] = value;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n/* eslint-enable flowtype/no-weak-types */\n\n/* eslint-disable-next-line flowtype/no-weak-types */\n\nfunction isCloneable(obj) {\n  /* eslint-disable-next-line eqeqeq */\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/Portfolio/node_modules/baseui/esm/utils/deep-merge.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","deepMerge","target","len","arguments","length","value","i","undefined","key","isCloneable","Array","isArray","toString","call"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;AAE1X;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,eAAe,SAASK,SAAT,CAAmBC,MAAnB,EAA2B;AACxCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACA,MAAIC,GAAG,GAAGC,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwB,CAAxB,GAA4BD,SAAS,CAACC,MAAV,GAAmB,CAAzD;AACA,MAAIT,GAAJ;AACA,MAAIU,KAAJ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyBI,CAAC,EAA1B,EAA8B;AAC5BX,IAAAA,GAAG,GAAG,CAACW,CAAC,GAAG,CAAJ,GAAQ,CAAR,IAAaH,SAAS,CAACC,MAAV,IAAoBE,CAAC,GAAG,CAArC,GAAyCC,SAAzC,GAAqDJ,SAAS,CAACG,CAAC,GAAG,CAAL,CAA/D,KAA2E,EAAjF;;AAEA,SAAK,IAAIE,GAAT,IAAgBb,GAAhB,EAAqB;AACnB,UAAID,OAAO,CAACC,GAAG,CAACa,GAAD,CAAJ,CAAP,KAAsBD,SAA1B,EAAqC;AACnCF,QAAAA,KAAK,GAAGV,GAAG,CAACa,GAAD,CAAX;;AAEA,YAAIC,WAAW,CAACJ,KAAD,CAAf,EAAwB;AACtBJ,UAAAA,MAAM,CAACO,GAAD,CAAN,GAAcR,SAAS;AACvB;AACAC,UAAAA,MAAM,CAACO,GAAD,CAAN,IAAeE,KAAK,CAACC,OAAN,CAAcN,KAAd,KAAwB,EAAvC,IAA6C,EAFtB,EAE0BA,KAF1B,CAAvB;AAGD,SAJD,MAIO;AACLJ,UAAAA,MAAM,CAACO,GAAD,CAAN,GAAcH,KAAd;AACD;AACF;AACF;AACF;;AAED,SAAOJ,MAAP;AACD;AACD;;AAEA;;AAEA,SAASQ,WAAT,CAAqBd,GAArB,EAA0B;AACxB;AACA,SAAOe,KAAK,CAACC,OAAN,CAAchB,GAAd,KAAsB,GAAGiB,QAAH,CAAYC,IAAZ,CAAiBlB,GAAjB,KAAyB,iBAAtD;AACD","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\n\n/* eslint-disable flowtype/no-weak-types */\nexport default function deepMerge(target) {\n  target = target || {};\n  var len = arguments.length <= 1 ? 0 : arguments.length - 1;\n  var obj;\n  var value;\n\n  for (var i = 0; i < len; i++) {\n    obj = (i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1]) || {};\n\n    for (var key in obj) {\n      if (_typeof(obj[key]) !== undefined) {\n        value = obj[key];\n\n        if (isCloneable(value)) {\n          target[key] = deepMerge(\n          /* eslint-disable-next-line no-mixed-operators */\n          target[key] || Array.isArray(value) && [] || {}, value);\n        } else {\n          target[key] = value;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n/* eslint-enable flowtype/no-weak-types */\n\n/* eslint-disable-next-line flowtype/no-weak-types */\n\nfunction isCloneable(obj) {\n  /* eslint-disable-next-line eqeqeq */\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}"]},"metadata":{},"sourceType":"module"}