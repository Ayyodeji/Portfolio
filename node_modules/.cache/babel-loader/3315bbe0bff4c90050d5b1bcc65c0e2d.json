{"ast":null,"code":"var prefixes = ['-webkit-', '-moz-', ''];\nvar properties = {\n  maxHeight: true,\n  maxWidth: true,\n  width: true,\n  height: true,\n  columnWidth: true,\n  minWidth: true,\n  minHeight: true\n};\nvar values = {\n  'min-content': true,\n  'max-content': true,\n  'fill-available': true,\n  'fit-content': true,\n  'contain-floats': true\n};\nexport default function sizing(property, value) {\n  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/Portfolio/node_modules/styletron-engine-atomic/node_modules/inline-style-prefixer/es/plugins/sizing.js"],"names":["prefixes","properties","maxHeight","maxWidth","width","height","columnWidth","minWidth","minHeight","values","sizing","property","value","hasOwnProperty","map","prefix"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,CAAC,UAAD,EAAa,OAAb,EAAsB,EAAtB,CAAf;AAEA,IAAIC,UAAU,GAAG;AACfC,EAAAA,SAAS,EAAE,IADI;AAEfC,EAAAA,QAAQ,EAAE,IAFK;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE,IAJO;AAKfC,EAAAA,WAAW,EAAE,IALE;AAMfC,EAAAA,QAAQ,EAAE,IANK;AAOfC,EAAAA,SAAS,EAAE;AAPI,CAAjB;AASA,IAAIC,MAAM,GAAG;AACX,iBAAe,IADJ;AAEX,iBAAe,IAFJ;AAGX,oBAAkB,IAHP;AAIX,iBAAe,IAJJ;AAKX,oBAAkB;AALP,CAAb;AAQA,eAAe,SAASC,MAAT,CAAgBC,QAAhB,EAA0BC,KAA1B,EAAiC;AAC9C,MAAIX,UAAU,CAACY,cAAX,CAA0BF,QAA1B,KAAuCF,MAAM,CAACI,cAAP,CAAsBD,KAAtB,CAA3C,EAAyE;AACvE,WAAOZ,QAAQ,CAACc,GAAT,CAAa,UAAUC,MAAV,EAAkB;AACpC,aAAOA,MAAM,GAAGH,KAAhB;AACD,KAFM,CAAP;AAGD;AACF","sourcesContent":["var prefixes = ['-webkit-', '-moz-', ''];\n\nvar properties = {\n  maxHeight: true,\n  maxWidth: true,\n  width: true,\n  height: true,\n  columnWidth: true,\n  minWidth: true,\n  minHeight: true\n};\nvar values = {\n  'min-content': true,\n  'max-content': true,\n  'fill-available': true,\n  'fit-content': true,\n  'contain-floats': true\n};\n\nexport default function sizing(property, value) {\n  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}