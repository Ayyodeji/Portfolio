{"ast":null,"code":"import { prefix } from 'inline-style-prefixer';\n\nvar SequentialIDGenerator = /*#__PURE__*/function () {\n  function SequentialIDGenerator(prefix$$1) {\n    if (prefix$$1 === void 0) {\n      prefix$$1 = \"\";\n    } // ensure start with \"ae\" so \"ad\" is never produced\n\n\n    this.prefix = prefix$$1;\n    this.count = 0;\n    this.offset = 374;\n    this.msb = 1295;\n    this.power = 2;\n  }\n\n  var _proto = SequentialIDGenerator.prototype;\n\n  _proto.next = function next() {\n    var id = this.increment().toString(36);\n    return this.prefix ? \"\" + this.prefix + id : id;\n  };\n\n  _proto.increment = function increment() {\n    var id = this.count + this.offset;\n\n    if (id === this.msb) {\n      this.offset += (this.msb + 1) * 9;\n      this.msb = Math.pow(36, ++this.power) - 1;\n    }\n\n    this.count++;\n    return id;\n  };\n\n  return SequentialIDGenerator;\n}(); // adapted from https://github.com/dutchenkoOleg/sort-css-media-queries\n\n\nvar minMaxWidth = /(!?\\(\\s*min(-device-)?-width).+\\(\\s*max(-device)?-width/i;\nvar minWidth = /\\(\\s*min(-device)?-width/i;\nvar maxMinWidth = /(!?\\(\\s*max(-device)?-width).+\\(\\s*min(-device)?-width/i;\nvar maxWidth = /\\(\\s*max(-device)?-width/i;\n\nvar isMinWidth = _testQuery(minMaxWidth, maxMinWidth, minWidth);\n\nvar isMaxWidth = _testQuery(maxMinWidth, minMaxWidth, maxWidth);\n\nvar minMaxHeight = /(!?\\(\\s*min(-device)?-height).+\\(\\s*max(-device)?-height/i;\nvar minHeight = /\\(\\s*min(-device)?-height/i;\nvar maxMinHeight = /(!?\\(\\s*max(-device)?-height).+\\(\\s*min(-device)?-height/i;\nvar maxHeight = /\\(\\s*max(-device)?-height/i;\n\nvar isMinHeight = _testQuery(minMaxHeight, maxMinHeight, minHeight);\n\nvar isMaxHeight = _testQuery(maxMinHeight, minMaxHeight, maxHeight);\n\nvar isPrint = /print/i;\nvar isPrintOnly = /^print$/i;\nvar maxValue = Number.MAX_VALUE;\n\nfunction _getQueryLength(length) {\n  var matches = /(-?\\d*\\.?\\d+)(ch|em|ex|px|rem)/.exec(length);\n\n  if (matches === null) {\n    return maxValue;\n  }\n\n  var number = matches[1];\n  var unit = matches[2];\n\n  switch (unit) {\n    case \"ch\":\n      number = parseFloat(number) * 8.8984375;\n      break;\n\n    case \"em\":\n    case \"rem\":\n      number = parseFloat(number) * 16;\n      break;\n\n    case \"ex\":\n      number = parseFloat(number) * 8.296875;\n      break;\n\n    case \"px\":\n      number = parseFloat(number);\n      break;\n  }\n\n  return +number;\n}\n\nfunction _testQuery(doubleTestTrue, doubleTestFalse, singleTest) {\n  return function (query) {\n    if (doubleTestTrue.test(query)) {\n      return true;\n    } else if (doubleTestFalse.test(query)) {\n      return false;\n    }\n\n    return singleTest.test(query);\n  };\n}\n\nfunction _testIsPrint(a, b) {\n  var isPrintA = isPrint.test(a);\n  var isPrintOnlyA = isPrintOnly.test(a);\n  var isPrintB = isPrint.test(b);\n  var isPrintOnlyB = isPrintOnly.test(b);\n\n  if (isPrintA && isPrintB) {\n    if (!isPrintOnlyA && isPrintOnlyB) {\n      return 1;\n    }\n\n    if (isPrintOnlyA && !isPrintOnlyB) {\n      return -1;\n    }\n\n    return a.localeCompare(b);\n  }\n\n  if (isPrintA) {\n    return 1;\n  }\n\n  if (isPrintB) {\n    return -1;\n  }\n\n  return null;\n}\n\nfunction sortCSSmq(a, b) {\n  if (a === \"\") {\n    return -1;\n  }\n\n  if (b === \"\") {\n    return 1;\n  }\n\n  var testIsPrint = _testIsPrint(a, b);\n\n  if (testIsPrint !== null) {\n    return testIsPrint;\n  }\n\n  var minA = isMinWidth(a) || isMinHeight(a);\n  var maxA = isMaxWidth(a) || isMaxHeight(a);\n  var minB = isMinWidth(b) || isMinHeight(b);\n  var maxB = isMaxWidth(b) || isMaxHeight(b);\n\n  if (minA && maxB) {\n    return -1;\n  }\n\n  if (maxA && minB) {\n    return 1;\n  }\n\n  var lengthA = _getQueryLength(a);\n\n  var lengthB = _getQueryLength(b);\n\n  if (lengthA === maxValue && lengthB === maxValue) {\n    return a.localeCompare(b);\n  } else if (lengthA === maxValue) {\n    return 1;\n  } else if (lengthB === maxValue) {\n    return -1;\n  }\n\n  if (lengthA > lengthB) {\n    if (maxA) {\n      return -1;\n    }\n\n    return 1;\n  }\n\n  if (lengthA < lengthB) {\n    if (maxA) {\n      return 1;\n    }\n\n    return -1;\n  }\n\n  return a.localeCompare(b);\n}\n\nvar MultiCache = /*#__PURE__*/function () {\n  function MultiCache(idGenerator, onNewCache, onNewValue) {\n    this.idGenerator = idGenerator;\n    this.onNewCache = onNewCache;\n    this.onNewValue = onNewValue;\n    this.sortedCacheKeys = [];\n    this.caches = {};\n  }\n\n  var _proto = MultiCache.prototype;\n\n  _proto.getCache = function getCache(key) {\n    if (!this.caches[key]) {\n      var _cache = new Cache(this.idGenerator, this.onNewValue);\n\n      _cache.key = key;\n      this.sortedCacheKeys.push(key);\n      this.sortedCacheKeys.sort(sortCSSmq);\n      var keyIndex = this.sortedCacheKeys.indexOf(key);\n      var insertBeforeMedia = keyIndex < this.sortedCacheKeys.length - 1 ? this.sortedCacheKeys[keyIndex + 1] : void 0;\n      this.caches[key] = _cache;\n      this.onNewCache(key, _cache, insertBeforeMedia);\n    }\n\n    return this.caches[key];\n  };\n\n  _proto.getSortedCacheKeys = function getSortedCacheKeys() {\n    return this.sortedCacheKeys;\n  };\n\n  return MultiCache;\n}();\n\nvar Cache = /*#__PURE__*/function () {\n  function Cache(idGenerator, onNewValue) {\n    this.cache = {};\n    this.idGenerator = idGenerator;\n    this.onNewValue = onNewValue;\n  }\n\n  var _proto2 = Cache.prototype;\n\n  _proto2.addValue = function addValue(key, value) {\n    var cached = this.cache[key];\n\n    if (cached) {\n      return cached;\n    }\n\n    var id = this.idGenerator.next();\n    this.cache[key] = id;\n    this.onNewValue(this, id, value);\n    return id;\n  };\n\n  return Cache;\n}();\n\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction hyphenateStyleName(prop) {\n  return prop in cache ? cache[prop] : cache[prop] = prop.replace(uppercasePattern, \"-$&\").toLowerCase().replace(msPattern, \"-ms-\");\n}\n/**\n * Adapted from https://github.com/gilmoreorless/css-shorthand-properties\n */\n\n\nvar shorthandMap = {\n  // CSS 2.1: https://www.w3.org/TR/CSS2/propidx.html\n  \"list-style\": [\"list-style-type\", \"list-style-position\", \"list-style-image\"],\n  margin: [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"],\n  outline: [\"outline-width\", \"outline-style\", \"outline-color\"],\n  padding: [\"padding-top\", \"padding-right\", \"padding-bottom\", \"padding-left\"],\n  // CSS Backgrounds and Borders Module Level 3: https://www.w3.org/TR/css3-background/\n  background: [\"background-image\", \"background-position\", \"background-size\", \"background-repeat\", \"background-origin\", \"background-clip\", \"background-attachment\", \"background-color\"],\n  border: [\"border-top-width\", \"border-right-width\", \"border-bottom-width\", \"border-left-width\", \"border-width\", \"border-top-style\", \"border-right-style\", \"border-bottom-style\", \"border-left-style\", \"border-style\", \"border-top-color\", \"border-right-color\", \"border-bottom-color\", \"border-left-color\", \"border-color\"],\n  \"border-color\": [\"border-top-color\", \"border-right-color\", \"border-bottom-color\", \"border-left-color\"],\n  \"border-style\": [\"border-top-style\", \"border-right-style\", \"border-bottom-style\", \"border-left-style\"],\n  \"border-width\": [\"border-top-width\", \"border-right-width\", \"border-bottom-width\", \"border-left-width\"],\n  \"border-top\": [\"border-top-width\", \"border-top-style\", \"border-top-color\"],\n  \"border-right\": [\"border-right-width\", \"border-right-style\", \"border-right-color\"],\n  \"border-bottom\": [\"border-bottom-width\", \"border-bottom-style\", \"border-bottom-color\"],\n  \"border-left\": [\"border-left-width\", \"border-left-style\", \"border-left-color\"],\n  \"border-radius\": [\"border-top-left-radius\", \"border-top-right-radius\", \"border-bottom-right-radius\", \"border-bottom-left-radius\"],\n  \"border-image\": [\"border-image-source\", \"border-image-slice\", \"border-image-width\", \"border-image-outset\", \"border-image-repeat\"],\n  // CSS Fonts Module Level 3: https://www.w3.org/TR/css3-fonts/\n  font: [\"font-style\", \"font-variant-ligatures\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-numeric\", \"font-variant-east-asian\", \"font-variant\", \"font-weight\", \"font-stretch\", \"font-size\", \"line-height\", \"font-family\"],\n  \"font-variant\": [\"font-variant-ligatures\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-numeric\", \"font-variant-east-asian\"],\n  // CSS Flexible Box Layout Module Level 1: https://www.w3.org/TR/css3-flexbox-1/\n  flex: [\"flex-grow\", \"flex-shrink\", \"flex-basis\"],\n  \"flex-flow\": [\"flex-direction\", \"flex-wrap\"],\n  // CSS Grid Layout Module Level 1: https://www.w3.org/TR/css-grid-1/\n  grid: [\"grid-template-rows\", \"grid-template-columns\", \"grid-template-areas\", \"grid-auto-rows\", \"grid-auto-columns\", \"grid-auto-flow\"],\n  \"grid-template\": [\"grid-template-rows\", \"grid-template-columns\", \"grid-template-areas\"],\n  \"grid-row\": [\"grid-row-start\", \"grid-row-end\"],\n  \"grid-column\": [\"grid-column-start\", \"grid-column-end\"],\n  \"grid-area\": [\"grid-row-start\", \"grid-column-start\", \"grid-row-end\", \"grid-column-end\"],\n  \"grid-gap\": [\"grid-row-gap\", \"grid-column-gap\"],\n  // CSS Masking Module Level 1: https://www.w3.org/TR/css-masking/\n  mask: [\"mask-image\", \"mask-mode\", \"mask-position\", \"mask-size\", \"mask-repeat\", \"mask-origin\", \"mask-clip\"],\n  \"mask-border\": [\"mask-border-source\", \"mask-border-slice\", \"mask-border-width\", \"mask-border-outset\", \"mask-border-repeat\", \"mask-border-mode\"],\n  // CSS Multi-column Layout Module: https://www.w3.org/TR/css3-multicol/\n  columns: [\"column-width\", \"column-count\"],\n  \"column-rule\": [\"column-rule-width\", \"column-rule-style\", \"column-rule-color\"],\n  // CSS Scroll Snap Module Level 1: https://www.w3.org/TR/css-scroll-snap-1/\n  \"scroll-padding\": [\"scroll-padding-top\", \"scroll-padding-right\", \"scroll-padding-bottom\", \"scroll-padding-left\"],\n  \"scroll-padding-block\": [\"scroll-padding-block-start\", \"scroll-padding-block-end\"],\n  \"scroll-padding-inline\": [\"scroll-padding-inline-start\", \"scroll-padding-inline-end\"],\n  \"scroll-snap-margin\": [\"scroll-snap-margin-top\", \"scroll-snap-margin-right\", \"scroll-snap-margin-bottom\", \"scroll-snap-margin-left\"],\n  \"scroll-snap-margin-block\": [\"scroll-snap-margin-block-start\", \"scroll-snap-margin-block-end\"],\n  \"scroll-snap-margin-inline\": [\"scroll-snap-margin-inline-start\", \"scroll-snap-margin-inline-end\"],\n  // CSS Speech Module: https://www.w3.org/TR/css3-speech/\n  cue: [\"cue-before\", \"cue-after\"],\n  pause: [\"pause-before\", \"pause-after\"],\n  rest: [\"rest-before\", \"rest-after\"],\n  // CSS Text Decoration Module Level 3: https://www.w3.org/TR/css-text-decor-3/\n  \"text-decoration\": [\"text-decoration-line\", \"text-decoration-style\", \"text-decoration-color\"],\n  \"text-emphasis\": [\"text-emphasis-style\", \"text-emphasis-color\"],\n  // CSS Animations (WD): https://www.w3.org/TR/css3-animations\n  animation: [\"animation-name\", \"animation-duration\", \"animation-timing-function\", \"animation-delay\", \"animation-iteration-count\", \"animation-direction\", \"animation-fill-mode\", \"animation-play-state\"],\n  // CSS Transitions (WD): https://www.w3.org/TR/css3-transitions/\n  transition: [\"transition-property\", \"transition-duration\", \"transition-timing-function\", \"transition-delay\"]\n};\n\nfunction validateNoMixedHand(style) {\n  var hyphenatedProperties = Object.keys(style).reduce(function (acc, property) {\n    acc[hyphenateStyleName(property)] = property;\n    return acc;\n  }, {});\n  var mixed = [];\n\n  for (var property in hyphenatedProperties) {\n    if (property in shorthandMap) {\n      for (var _iterator = shorthandMap[property], _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _longhand = _ref;\n\n        if (_longhand in hyphenatedProperties) {\n          var long = hyphenatedProperties[_longhand];\n          var short = hyphenatedProperties[property];\n          mixed.push({\n            shorthand: {\n              property: short,\n              value: style[short]\n            },\n            longhand: {\n              property: long,\n              value: style[long]\n            }\n          });\n        }\n      }\n    }\n  }\n\n  return mixed;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction injectStylePrefixed(styleCache, styles, media, pseudo) {\n  var cache = styleCache.getCache(media);\n  var classString = \"\";\n\n  for (var originalKey in styles) {\n    var originalVal = styles[originalKey];\n\n    if (originalVal === void 0 || originalVal === null) {\n      continue;\n    }\n\n    if (_typeof(originalVal) !== \"object\") {\n      // Non-null and non-undefined primitive value\n      if (process.env.NODE_ENV !== \"production\") {\n        validateValueType(originalVal, originalKey);\n      }\n\n      var propValPair = hyphenateStyleName(originalKey) + \":\" + originalVal;\n      var key = \"\" + pseudo + propValPair;\n      var cachedId = cache.cache[key];\n\n      if (cachedId !== void 0) {\n        // cache hit\n        classString += \" \" + cachedId;\n        continue;\n      } else {\n        var _prefix; // cache miss\n\n\n        var block = \"\";\n        var prefixed = prefix((_prefix = {}, _prefix[originalKey] = originalVal, _prefix));\n\n        for (var prefixedKey in prefixed) {\n          var prefixedVal = prefixed[prefixedKey];\n\n          var prefixedValType = _typeof(prefixedVal);\n\n          if (prefixedValType === \"string\" || prefixedValType === \"number\") {\n            var prefixedPair = hyphenateStyleName(prefixedKey) + \":\" + prefixedVal;\n\n            if (prefixedPair !== propValPair) {\n              block += prefixedPair + \";\";\n            }\n          } else if (Array.isArray(prefixedVal)) {\n            var hyphenated = hyphenateStyleName(prefixedKey);\n\n            for (var i = 0; i < prefixedVal.length; i++) {\n              var _prefixedPair = hyphenated + \":\" + prefixedVal[i];\n\n              if (_prefixedPair !== propValPair) {\n                block += _prefixedPair + \";\";\n              }\n            }\n          }\n        }\n\n        block += propValPair; // ensure original prop/val is last (for hydration)\n\n        var id = cache.addValue(key, {\n          pseudo: pseudo,\n          block: block\n        });\n        classString += \" \" + id;\n      }\n    } else {\n      // Non-null object value\n      if (originalKey[0] === \":\") {\n        classString += \" \" + injectStylePrefixed(styleCache, originalVal, media, pseudo + originalKey);\n      } else if (originalKey.substring(0, 6) === \"@media\") {\n        classString += \" \" + injectStylePrefixed(styleCache, originalVal, originalKey.substr(7), pseudo);\n      }\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var conflicts = validateNoMixedHand(styles);\n\n    if (conflicts.length) {\n      conflicts.forEach(function (_ref) {\n        var _JSON$stringify, _JSON$stringify2;\n\n        var shorthand = _ref.shorthand,\n            longhand = _ref.longhand;\n        var short = JSON.stringify((_JSON$stringify = {}, _JSON$stringify[shorthand.property] = shorthand.value, _JSON$stringify));\n        var long = JSON.stringify((_JSON$stringify2 = {}, _JSON$stringify2[longhand.property] = longhand.value, _JSON$stringify2)); // eslint-disable-next-line no-console\n\n        console.warn(\"Styles `\" + short + \"` and `\" + long + \"` in object yielding class \\\"\" + classString.slice(1) + \"\\\" may result in unexpected behavior. Mixing shorthand and longhand properties within the same style object is unsupported with atomic rendering.\");\n      });\n    }\n  } // remove leading space\n\n\n  return classString.slice(1);\n}\n\nfunction validateValueType(value, key) {\n  if (value === null || Array.isArray(value) || typeof value !== \"number\" && typeof value !== \"string\") {\n    throw new Error(\"Unsupported style value: \" + JSON.stringify(value) + \" used in property \" + JSON.stringify(key));\n  }\n}\n\nfunction _typeof$1(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof$1 = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof$1 = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof$1(obj);\n}\n/* eslint-disable no-console */\n\n\nvar validAnimationState = /^(from|to|\\+?(\\d*\\.)?\\d+%)(\\s*,\\s*(from|to|\\+?(\\d*\\.)?\\d+%))*$/;\n\nfunction validateKeyframesObject(keyframes) {\n  var valid = true;\n\n  for (var animationState in keyframes) {\n    var value = keyframes[animationState];\n\n    if (!validAnimationState.test(animationState)) {\n      valid = false;\n      console.warn(\"Warning: property \\\"\" + animationState + \"\\\" in keyframes object \" + JSON.stringify(keyframes) + \" is not a valid. Must be \\\"from\\\", \\\"to\\\", or a percentage.\");\n    }\n\n    if (_typeof$1(value) !== \"object\") {\n      valid = false;\n      console.warn(\"Warning: value for \\\"\" + animationState + \"\\\" property in keyframes object \" + JSON.stringify(keyframes) + \" must be an object. Instead it was a \" + _typeof$1(value) + \".\");\n    }\n\n    if (!valid) {\n      console.warn(\"Warning: object used as value for \\\"animationName\\\" style is invalid:\", keyframes);\n    }\n  }\n}\n\nfunction atomicSelector(id, pseudo) {\n  var selector = \".\" + id;\n\n  if (pseudo) {\n    selector += pseudo;\n  }\n\n  return selector;\n}\n\nfunction keyframesToBlock(keyframes) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateKeyframesObject(keyframes);\n  }\n\n  if (process.env.NODE_ENV !== \"production\" && typeof Object.getPrototypeOf(keyframes) !== \"undefined\") {\n    if (Object.getPrototypeOf(keyframes) !== Object.getPrototypeOf({})) {\n      // eslint-disable-next-line no-console\n      console.warn(\"Only plain objects should be used as animation values. Unexpectedly recieved:\", keyframes);\n    }\n  }\n\n  var result = \"\";\n\n  for (var animationState in keyframes) {\n    result += animationState + \"{\" + declarationsToBlock(keyframes[animationState]) + \"}\";\n  }\n\n  return result;\n}\n\nfunction declarationsToBlock(style) {\n  var css = \"\";\n\n  for (var prop in style) {\n    var val = style[prop];\n\n    if (typeof val === \"string\" || typeof val === \"number\") {\n      css += hyphenateStyleName(prop) + \":\" + val + \";\";\n    }\n  } // trim trailing semicolon\n\n\n  return css.slice(0, -1);\n}\n\nfunction keyframesBlockToRule(id, block) {\n  return \"@keyframes \" + id + \"{\" + block + \"}\";\n}\n\nfunction fontFaceBlockToRule(id, block) {\n  return \"@font-face{font-family:\" + id + \";\" + block + \"}\";\n}\n\nfunction styleBlockToRule(selector, block) {\n  return selector + \"{\" + block + \"}\";\n}\n/* eslint-env browser */\n\n\nvar insertRuleIntoDevtools = function insertRuleIntoDevtools(selector, block) {\n  // start after the . combinator and cut at the first : if there is one to cut out the pseudo classes\n  var key = selector.substring(1, selector.indexOf(\":\") !== -1 ? selector.indexOf(\":\") : selector.length);\n  var styles = {}; // split the declaration to catch vendor prefixing\n\n  for (var _iterator = block.split(\";\"), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _decl = _ref;\n    if (_decl.trim() !== \"\" && !window.__STYLETRON_DEVTOOLS__.atomicMap[key]) styles[_decl.substring(0, _decl.indexOf(\":\"))] = _decl.substring(_decl.indexOf(\":\") + 1, _decl.length);\n  }\n\n  window.__STYLETRON_DEVTOOLS__.atomicMap[key] = styles;\n};\n\nvar hydrateDevtoolsRule = function hydrateDevtoolsRule(cssString) {\n  var id = cssString.substring(0, 3);\n  var block = cssString.substring(4, cssString.length - 1);\n  insertRuleIntoDevtools(id, block);\n};\n/* eslint-env browser */\n\n\nvar STYLES_HYDRATOR = /\\.([^{:]+)(:[^{]+)?{(?:[^}]*;)?([^}]*?)}/g;\nvar KEYFRAMES_HYRDATOR = /@keyframes ([^{]+){((?:(?:from|to|(?:\\d+\\.?\\d*%))\\{(?:[^}])*})*)}/g;\nvar FONT_FACE_HYDRATOR = /@font-face\\{font-family:([^;]+);([^}]*)\\}/g;\n\nfunction hydrateStyles(cache, hydrator, css) {\n  var match;\n\n  while (match = hydrator.exec(css)) {\n    var _match = match,\n        id = _match[1],\n        pseudo = _match[2],\n        key = _match[3];\n\n    if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n\n    var fullKey = pseudo ? \"\" + pseudo + key : key;\n    cache.cache[fullKey] = id; // set cache without triggering side effects\n\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nfunction hydrate(cache, hydrator, css) {\n  var match;\n\n  while (match = hydrator.exec(css)) {\n    var _match2 = match,\n        id = _match2[1],\n        key = _match2[2];\n\n    if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n\n    cache.cache[key] = id; // set cache without triggering side effects\n\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nvar StyletronClient = /*#__PURE__*/function () {\n  function StyletronClient(opts) {\n    var _this = this;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    this.styleElements = {};\n    var styleIdGenerator = new SequentialIDGenerator(opts.prefix);\n\n    var onNewStyle = function onNewStyle(cache, id, value) {\n      var pseudo = value.pseudo,\n          block = value.block;\n      var sheet = _this.styleElements[cache.key].sheet;\n      var selector = atomicSelector(id, pseudo);\n      var rule = styleBlockToRule(selector, block);\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n\n        if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n          insertRuleIntoDevtools(selector, block);\n        }\n      } catch (e) {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(\"Failed to inject CSS: \\\"\" + rule + \"\\\". Perhaps this has invalid or un-prefixed properties?\");\n        }\n      }\n    }; // Setup style cache\n\n\n    this.styleCache = new MultiCache(styleIdGenerator, function (media, _cache, insertBeforeMedia) {\n      var styleElement = document.createElement(\"style\");\n      styleElement.media = media;\n\n      if (insertBeforeMedia === void 0) {\n        _this.container.appendChild(styleElement);\n      } else {\n        var insertBeforeIndex = findSheetIndexWithMedia(_this.container.children, insertBeforeMedia);\n\n        _this.container.insertBefore(styleElement, _this.container.children[insertBeforeIndex]);\n      }\n\n      _this.styleElements[media] = styleElement;\n    }, onNewStyle);\n    this.keyframesCache = new Cache(new SequentialIDGenerator(opts.prefix), function (cache, id, value) {\n      _this.styleCache.getCache(\"\");\n\n      var sheet = _this.styleElements[\"\"].sheet;\n      var rule = keyframesBlockToRule(id, keyframesToBlock(value));\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(\"Failed to inject CSS: \\\"\" + rule + \"\\\". Perhaps this has invalid or un-prefixed properties?\");\n        }\n      }\n    });\n    this.fontFaceCache = new Cache(new SequentialIDGenerator(opts.prefix), function (cache, id, value) {\n      _this.styleCache.getCache(\"\");\n\n      var sheet = _this.styleElements[\"\"].sheet;\n      var rule = fontFaceBlockToRule(id, declarationsToBlock(value));\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(\"Failed to inject CSS: \\\"\" + rule + \"\\\". Perhaps this has invalid or un-prefixed properties?\");\n        }\n      }\n    });\n\n    if (opts.container) {\n      this.container = opts.container;\n    } // Hydrate\n\n\n    if (opts.hydrate && opts.hydrate.length > 0) {\n      // infer container from parent element\n      if (!this.container) {\n        var parentElement = opts.hydrate[0].parentElement;\n\n        if (parentElement !== null && parentElement !== void 0) {\n          this.container = parentElement;\n        }\n      }\n\n      for (var i = 0; i < opts.hydrate.length; i++) {\n        var element = opts.hydrate[i];\n        var hydrateType = element.getAttribute(\"data-hydrate\");\n\n        if (hydrateType === \"font-face\") {\n          hydrate(this.fontFaceCache, FONT_FACE_HYDRATOR, element.textContent);\n          continue;\n        }\n\n        if (hydrateType === \"keyframes\") {\n          hydrate(this.keyframesCache, KEYFRAMES_HYRDATOR, element.textContent);\n          continue;\n        }\n\n        var key = element.media ? element.media : \"\";\n        this.styleElements[key] = element;\n        var cache = new Cache(styleIdGenerator, onNewStyle);\n        cache.key = key;\n        hydrateStyles(cache, STYLES_HYDRATOR, element.textContent);\n        this.styleCache.sortedCacheKeys.push(key);\n        this.styleCache.caches[key] = cache;\n      }\n    }\n\n    if (!this.container) {\n      if (document.head === null) {\n        throw new Error(\"No container provided and `document.head` was null\");\n      }\n\n      this.container = document.head;\n    }\n  }\n\n  var _proto = StyletronClient.prototype;\n\n  _proto.renderStyle = function renderStyle(style) {\n    return injectStylePrefixed(this.styleCache, style, \"\", \"\");\n  };\n\n  _proto.renderFontFace = function renderFontFace(fontFace) {\n    var key = declarationsToBlock(fontFace);\n    return this.fontFaceCache.addValue(key, fontFace);\n  };\n\n  _proto.renderKeyframes = function renderKeyframes(keyframes) {\n    var key = keyframesToBlock(keyframes);\n    return this.keyframesCache.addValue(key, keyframes);\n  };\n\n  return StyletronClient;\n}();\n\nfunction findSheetIndexWithMedia(children, media) {\n  var index = 0;\n\n  for (; index < children.length; index++) {\n    var child = children[index];\n\n    if (child.tagName === \"STYLE\" && child.media === media) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar StyletronServer = /*#__PURE__*/function () {\n  function StyletronServer(opts) {\n    var _this = this;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    this.styleRules = {\n      \"\": \"\"\n    };\n    this.styleCache = new MultiCache(new SequentialIDGenerator(opts.prefix), function (media) {\n      _this.styleRules[media] = \"\";\n    }, function (cache, id, value) {\n      var pseudo = value.pseudo,\n          block = value.block;\n      _this.styleRules[cache.key] += styleBlockToRule(atomicSelector(id, pseudo), block);\n    });\n    this.fontFaceRules = \"\";\n    this.fontFaceCache = new Cache(new SequentialIDGenerator(opts.prefix), function (cache, id, value) {\n      _this.fontFaceRules += fontFaceBlockToRule(id, declarationsToBlock(value));\n    });\n    this.keyframesRules = \"\";\n    this.keyframesCache = new Cache(new SequentialIDGenerator(opts.prefix), function (cache, id, value) {\n      _this.keyframesRules += keyframesBlockToRule(id, keyframesToBlock(value));\n    });\n  }\n\n  var _proto = StyletronServer.prototype;\n\n  _proto.renderStyle = function renderStyle(style) {\n    return injectStylePrefixed(this.styleCache, style, \"\", \"\");\n  };\n\n  _proto.renderFontFace = function renderFontFace(fontFace) {\n    var key = JSON.stringify(fontFace);\n    return this.fontFaceCache.addValue(key, fontFace);\n  };\n\n  _proto.renderKeyframes = function renderKeyframes(keyframes) {\n    var key = JSON.stringify(keyframes);\n    return this.keyframesCache.addValue(key, keyframes);\n  };\n\n  _proto.getStylesheets = function getStylesheets() {\n    return [].concat(this.keyframesRules.length ? [{\n      css: this.keyframesRules,\n      attrs: {\n        \"data-hydrate\": \"keyframes\"\n      }\n    }] : [], this.fontFaceRules.length ? [{\n      css: this.fontFaceRules,\n      attrs: {\n        \"data-hydrate\": \"font-face\"\n      }\n    }] : [], sheetify(this.styleRules, this.styleCache.getSortedCacheKeys()));\n  };\n\n  _proto.getStylesheetsHtml = function getStylesheetsHtml(className) {\n    if (className === void 0) {\n      className = \"_styletron_hydrate_\";\n    }\n\n    return generateHtmlString(this.getStylesheets(), className);\n  };\n\n  _proto.getCss = function getCss() {\n    return this.keyframesRules + this.fontFaceRules + stringify(this.styleRules, this.styleCache.getSortedCacheKeys());\n  };\n\n  return StyletronServer;\n}();\n\nfunction generateHtmlString(sheets, className) {\n  var html = \"\";\n\n  for (var i = 0; i < sheets.length; i++) {\n    var sheet = sheets[i];\n\n    var _sheet$attrs = sheet.attrs,\n        originalClassName = _sheet$attrs.class,\n        rest = _objectWithoutProperties(_sheet$attrs, [\"class\"]);\n\n    var attrs = Object.assign({\n      class: originalClassName ? className + \" \" + originalClassName : className\n    }, rest);\n    html += \"<style\" + attrsToString(attrs) + \">\" + sheet.css + \"</style>\";\n  }\n\n  return html;\n}\n\nfunction attrsToString(attrs) {\n  var result = \"\";\n\n  for (var attr in attrs) {\n    var value = attrs[attr];\n\n    if (value === true) {\n      result += \" \" + attr;\n    } else if (value !== false) {\n      result += \" \" + attr + \"=\\\"\" + value + \"\\\"\";\n    }\n  }\n\n  return result;\n}\n\nfunction stringify(styleRules, sortedCacheKeys) {\n  var result = \"\";\n  sortedCacheKeys.forEach(function (cacheKey) {\n    var rules = styleRules[cacheKey];\n\n    if (cacheKey !== \"\") {\n      result += \"@media \" + cacheKey + \"{\" + rules + \"}\";\n    } else {\n      result += rules;\n    }\n  });\n  return result;\n}\n\nfunction sheetify(styleRules, sortedCacheKeys) {\n  if (sortedCacheKeys.length === 0) {\n    return [{\n      css: \"\",\n      attrs: {}\n    }];\n  }\n\n  var sheets = [];\n  sortedCacheKeys.forEach(function (cacheKey) {\n    // omit media (cacheKey) attribute if empty\n    var attrs = cacheKey === \"\" ? {} : {\n      media: cacheKey\n    };\n    sheets.push({\n      css: styleRules[cacheKey],\n      attrs: attrs\n    });\n  });\n  return sheets;\n}\n\nexport { StyletronClient as Client, StyletronServer as Server };","map":{"version":3,"sources":["../src/sequential-id-generator.js","../src/sort-css-media-queries.js","../src/cache.js","../src/hyphenate-style-name.js","../src/validate-no-mixed-hand.js","../src/inject-style-prefixed.js","../src/validate-keyframes-object.js","../src/css.js","../src/dev-tool.js","../src/client/client.js","../src/server/server.js"],"names":["SequentialIDGenerator","prefix","next","id","increment","Math","minMaxWidth","minWidth","maxMinWidth","maxWidth","isMinWidth","_testQuery","isMaxWidth","minMaxHeight","minHeight","maxMinHeight","maxHeight","isMinHeight","isMaxHeight","isPrint","isPrintOnly","maxValue","Number","matches","number","unit","parseFloat","doubleTestTrue","doubleTestFalse","singleTest","isPrintA","isPrintOnlyA","isPrintB","isPrintOnlyB","a","b","testIsPrint","_testIsPrint","minA","maxA","minB","maxB","lengthA","_getQueryLength","lengthB","MultiCache","cache","keyIndex","insertBeforeMedia","Cache","cached","uppercasePattern","msPattern","prop","shorthandMap","hyphenatedProperties","hyphenate","mixed","property","longhand","long","short","style","styleCache","classString","originalVal","styles","propValPair","key","cachedId","block","prefixed","prefixedVal","prefixedValType","prefixedPair","Array","hyphenated","i","originalKey","injectStylePrefixed","pseudo","conflicts","validateNoMixedHand","shorthand","JSON","value","validAnimationState","valid","keyframes","_typeof","selector","Object","result","animationState","declarationsToBlock","css","val","insertRuleIntoDevtools","decl","window","hydrateDevtoolsRule","cssString","STYLES_HYDRATOR","KEYFRAMES_HYRDATOR","FONT_FACE_HYDRATOR","match","hydrator","fullKey","StyletronClient","opts","styleIdGenerator","onNewStyle","sheet","atomicSelector","rule","styleBlockToRule","styleElement","document","insertBeforeIndex","findSheetIndexWithMedia","keyframesBlockToRule","keyframesToBlock","fontFaceBlockToRule","parentElement","element","hydrateType","renderStyle","renderFontFace","fontFace","renderKeyframes","index","children","child","StyletronServer","getStylesheets","sheetify","getStylesheetsHtml","className","generateHtmlString","getCss","stringify","html","sheets","originalClassName","rest","attrs","attrsToString","rules","styleRules","cacheKey","sortedCacheKeys"],"mappings":"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","sourcesContent":["// @flow\n\nexport default class SequentialIDGenerator {\n  prefix: string;\n  count: number;\n  offset: number;\n  msb: number;\n  power: number;\n\n  constructor(prefix: string = \"\") {\n    // ensure start with \"ae\" so \"ad\" is never produced\n    this.prefix = prefix;\n    this.count = 0;\n    this.offset = 374;\n    this.msb = 1295;\n    this.power = 2;\n  }\n\n  next() {\n    const id = this.increment().toString(36);\n    return this.prefix ? `${this.prefix}${id}` : id;\n  }\n\n  increment() {\n    const id = this.count + this.offset;\n    if (id === this.msb) {\n      this.offset += (this.msb + 1) * 9;\n      this.msb = Math.pow(36, ++this.power) - 1;\n    }\n    this.count++;\n    return id;\n  }\n}\n","// adapted from https://github.com/dutchenkoOleg/sort-css-media-queries\n\n// @flow\n\nconst minMaxWidth = /(!?\\(\\s*min(-device-)?-width).+\\(\\s*max(-device)?-width/i;\nconst minWidth = /\\(\\s*min(-device)?-width/i;\nconst maxMinWidth = /(!?\\(\\s*max(-device)?-width).+\\(\\s*min(-device)?-width/i;\nconst maxWidth = /\\(\\s*max(-device)?-width/i;\n\nconst isMinWidth = _testQuery(minMaxWidth, maxMinWidth, minWidth);\nconst isMaxWidth = _testQuery(maxMinWidth, minMaxWidth, maxWidth);\n\nconst minMaxHeight = /(!?\\(\\s*min(-device)?-height).+\\(\\s*max(-device)?-height/i;\nconst minHeight = /\\(\\s*min(-device)?-height/i;\nconst maxMinHeight = /(!?\\(\\s*max(-device)?-height).+\\(\\s*min(-device)?-height/i;\nconst maxHeight = /\\(\\s*max(-device)?-height/i;\n\nconst isMinHeight = _testQuery(minMaxHeight, maxMinHeight, minHeight);\nconst isMaxHeight = _testQuery(maxMinHeight, minMaxHeight, maxHeight);\n\nconst isPrint = /print/i;\nconst isPrintOnly = /^print$/i;\nconst maxValue = Number.MAX_VALUE;\n\nfunction _getQueryLength(length: string) {\n  const matches = /(-?\\d*\\.?\\d+)(ch|em|ex|px|rem)/.exec(length);\n  if (matches === null) {\n    return maxValue;\n  }\n  let number = matches[1];\n  const unit = matches[2];\n  switch (unit) {\n    case \"ch\":\n      number = parseFloat(number) * 8.8984375;\n      break;\n    case \"em\":\n    case \"rem\":\n      number = parseFloat(number) * 16;\n      break;\n    case \"ex\":\n      number = parseFloat(number) * 8.296875;\n      break;\n    case \"px\":\n      number = parseFloat(number);\n      break;\n  }\n  return +number;\n}\n\nfunction _testQuery(\n  doubleTestTrue: RegExp,\n  doubleTestFalse: RegExp,\n  singleTest: RegExp,\n) {\n  return function(query: string) {\n    if (doubleTestTrue.test(query)) {\n      return true;\n    } else if (doubleTestFalse.test(query)) {\n      return false;\n    }\n    return singleTest.test(query);\n  };\n}\n\nfunction _testIsPrint(a: string, b: string) {\n  const isPrintA = isPrint.test(a);\n  const isPrintOnlyA = isPrintOnly.test(a);\n  const isPrintB = isPrint.test(b);\n  const isPrintOnlyB = isPrintOnly.test(b);\n\n  if (isPrintA && isPrintB) {\n    if (!isPrintOnlyA && isPrintOnlyB) {\n      return 1;\n    }\n    if (isPrintOnlyA && !isPrintOnlyB) {\n      return -1;\n    }\n    return a.localeCompare(b);\n  }\n  if (isPrintA) {\n    return 1;\n  }\n  if (isPrintB) {\n    return -1;\n  }\n  return null;\n}\n\nexport default function sortCSSmq(a: string, b: string) {\n  if (a === \"\") {\n    return -1;\n  }\n  if (b === \"\") {\n    return 1;\n  }\n  const testIsPrint = _testIsPrint(a, b);\n  if (testIsPrint !== null) {\n    return testIsPrint;\n  }\n\n  const minA = isMinWidth(a) || isMinHeight(a);\n  const maxA = isMaxWidth(a) || isMaxHeight(a);\n  const minB = isMinWidth(b) || isMinHeight(b);\n  const maxB = isMaxWidth(b) || isMaxHeight(b);\n\n  if (minA && maxB) {\n    return -1;\n  }\n  if (maxA && minB) {\n    return 1;\n  }\n\n  const lengthA = _getQueryLength(a);\n  const lengthB = _getQueryLength(b);\n\n  if (lengthA === maxValue && lengthB === maxValue) {\n    return a.localeCompare(b);\n  } else if (lengthA === maxValue) {\n    return 1;\n  } else if (lengthB === maxValue) {\n    return -1;\n  }\n\n  if (lengthA > lengthB) {\n    if (maxA) {\n      return -1;\n    }\n    return 1;\n  }\n\n  if (lengthA < lengthB) {\n    if (maxA) {\n      return 1;\n    }\n    return -1;\n  }\n\n  return a.localeCompare(b);\n}\n","// @flow\n\nimport SequentialIDGenerator from \"./sequential-id-generator.js\";\nimport sortMq from \"./sort-css-media-queries.js\";\n\nexport class MultiCache<T> {\n  caches: {[string]: Cache<T>};\n  idGenerator: SequentialIDGenerator;\n  onNewCache: (string, Cache<T>, ?string) => any;\n  onNewValue: (cache: Cache<T>, id: string, value: T) => any;\n  sortedCacheKeys: string[];\n\n  constructor(\n    idGenerator: SequentialIDGenerator,\n    onNewCache: Function,\n    onNewValue: Function,\n  ) {\n    this.idGenerator = idGenerator;\n    this.onNewCache = onNewCache;\n    this.onNewValue = onNewValue;\n    this.sortedCacheKeys = [];\n    this.caches = {};\n  }\n\n  getCache(key: string): Cache<T> {\n    if (!this.caches[key]) {\n      const cache = new Cache(this.idGenerator, this.onNewValue);\n      cache.key = key;\n      this.sortedCacheKeys.push(key);\n      this.sortedCacheKeys.sort(sortMq);\n      const keyIndex = this.sortedCacheKeys.indexOf(key);\n      const insertBeforeMedia =\n        keyIndex < this.sortedCacheKeys.length - 1\n          ? this.sortedCacheKeys[keyIndex + 1]\n          : void 0;\n      this.caches[key] = cache;\n      this.onNewCache(key, cache, insertBeforeMedia);\n    }\n    return this.caches[key];\n  }\n\n  getSortedCacheKeys() {\n    return this.sortedCacheKeys;\n  }\n}\n\nexport class Cache<T> {\n  cache: {[string]: string};\n  idGenerator: SequentialIDGenerator;\n  key: string;\n  onNewValue: (cache: Cache<T>, id: string, value: any) => any;\n\n  constructor(\n    idGenerator: SequentialIDGenerator,\n    onNewValue: (cache: Cache<T>, id: string, value: any) => any,\n  ) {\n    this.cache = {};\n    this.idGenerator = idGenerator;\n    this.onNewValue = onNewValue;\n  }\n\n  addValue(key: string, value: T) {\n    const cached = this.cache[key];\n    if (cached) {\n      return cached;\n    }\n    const id = this.idGenerator.next();\n    this.cache[key] = id;\n    this.onNewValue(this, id, value);\n    return id;\n  }\n}\n","// @flow\n\nconst uppercasePattern = /[A-Z]/g;\nconst msPattern = /^ms-/;\nconst cache = {};\n\nexport default function hyphenateStyleName(prop: string): string {\n  return prop in cache\n    ? cache[prop]\n    : (cache[prop] = prop\n        .replace(uppercasePattern, \"-$&\")\n        .toLowerCase()\n        .replace(msPattern, \"-ms-\"));\n}\n","// @flow\n\n/**\n * Adapted from https://github.com/gilmoreorless/css-shorthand-properties\n */\n\nimport hyphenate from \"./hyphenate-style-name.js\";\n\nconst shorthandMap = {\n  // CSS 2.1: https://www.w3.org/TR/CSS2/propidx.html\n  \"list-style\": [\"list-style-type\", \"list-style-position\", \"list-style-image\"],\n  margin: [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"],\n  outline: [\"outline-width\", \"outline-style\", \"outline-color\"],\n  padding: [\"padding-top\", \"padding-right\", \"padding-bottom\", \"padding-left\"],\n\n  // CSS Backgrounds and Borders Module Level 3: https://www.w3.org/TR/css3-background/\n  background: [\n    \"background-image\",\n    \"background-position\",\n    \"background-size\",\n    \"background-repeat\",\n    \"background-origin\",\n    \"background-clip\",\n    \"background-attachment\",\n    \"background-color\",\n  ],\n  border: [\n    \"border-top-width\",\n    \"border-right-width\",\n    \"border-bottom-width\",\n    \"border-left-width\",\n    \"border-width\",\n    \"border-top-style\",\n    \"border-right-style\",\n    \"border-bottom-style\",\n    \"border-left-style\",\n    \"border-style\",\n    \"border-top-color\",\n    \"border-right-color\",\n    \"border-bottom-color\",\n    \"border-left-color\",\n    \"border-color\",\n  ],\n  \"border-color\": [\n    \"border-top-color\",\n    \"border-right-color\",\n    \"border-bottom-color\",\n    \"border-left-color\",\n  ],\n  \"border-style\": [\n    \"border-top-style\",\n    \"border-right-style\",\n    \"border-bottom-style\",\n    \"border-left-style\",\n  ],\n  \"border-width\": [\n    \"border-top-width\",\n    \"border-right-width\",\n    \"border-bottom-width\",\n    \"border-left-width\",\n  ],\n  \"border-top\": [\"border-top-width\", \"border-top-style\", \"border-top-color\"],\n  \"border-right\": [\n    \"border-right-width\",\n    \"border-right-style\",\n    \"border-right-color\",\n  ],\n  \"border-bottom\": [\n    \"border-bottom-width\",\n    \"border-bottom-style\",\n    \"border-bottom-color\",\n  ],\n  \"border-left\": [\n    \"border-left-width\",\n    \"border-left-style\",\n    \"border-left-color\",\n  ],\n  \"border-radius\": [\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-left-radius\",\n  ],\n  \"border-image\": [\n    \"border-image-source\",\n    \"border-image-slice\",\n    \"border-image-width\",\n    \"border-image-outset\",\n    \"border-image-repeat\",\n  ],\n\n  // CSS Fonts Module Level 3: https://www.w3.org/TR/css3-fonts/\n  font: [\n    \"font-style\",\n    \"font-variant-ligatures\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-numeric\",\n    \"font-variant-east-asian\",\n    \"font-variant\",\n    \"font-weight\",\n    \"font-stretch\",\n    \"font-size\",\n    \"line-height\",\n    \"font-family\",\n  ],\n  \"font-variant\": [\n    \"font-variant-ligatures\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-numeric\",\n    \"font-variant-east-asian\",\n  ],\n\n  // CSS Flexible Box Layout Module Level 1: https://www.w3.org/TR/css3-flexbox-1/\n  flex: [\"flex-grow\", \"flex-shrink\", \"flex-basis\"],\n  \"flex-flow\": [\"flex-direction\", \"flex-wrap\"],\n\n  // CSS Grid Layout Module Level 1: https://www.w3.org/TR/css-grid-1/\n  grid: [\n    \"grid-template-rows\",\n    \"grid-template-columns\",\n    \"grid-template-areas\",\n    \"grid-auto-rows\",\n    \"grid-auto-columns\",\n    \"grid-auto-flow\",\n  ],\n  \"grid-template\": [\n    \"grid-template-rows\",\n    \"grid-template-columns\",\n    \"grid-template-areas\",\n  ],\n  \"grid-row\": [\"grid-row-start\", \"grid-row-end\"],\n  \"grid-column\": [\"grid-column-start\", \"grid-column-end\"],\n  \"grid-area\": [\n    \"grid-row-start\",\n    \"grid-column-start\",\n    \"grid-row-end\",\n    \"grid-column-end\",\n  ],\n  \"grid-gap\": [\"grid-row-gap\", \"grid-column-gap\"],\n\n  // CSS Masking Module Level 1: https://www.w3.org/TR/css-masking/\n  mask: [\n    \"mask-image\",\n    \"mask-mode\",\n    \"mask-position\",\n    \"mask-size\",\n    \"mask-repeat\",\n    \"mask-origin\",\n    \"mask-clip\",\n  ],\n  \"mask-border\": [\n    \"mask-border-source\",\n    \"mask-border-slice\",\n    \"mask-border-width\",\n    \"mask-border-outset\",\n    \"mask-border-repeat\",\n    \"mask-border-mode\",\n  ],\n\n  // CSS Multi-column Layout Module: https://www.w3.org/TR/css3-multicol/\n  columns: [\"column-width\", \"column-count\"],\n  \"column-rule\": [\n    \"column-rule-width\",\n    \"column-rule-style\",\n    \"column-rule-color\",\n  ],\n\n  // CSS Scroll Snap Module Level 1: https://www.w3.org/TR/css-scroll-snap-1/\n  \"scroll-padding\": [\n    \"scroll-padding-top\",\n    \"scroll-padding-right\",\n    \"scroll-padding-bottom\",\n    \"scroll-padding-left\",\n  ],\n  \"scroll-padding-block\": [\n    \"scroll-padding-block-start\",\n    \"scroll-padding-block-end\",\n  ],\n  \"scroll-padding-inline\": [\n    \"scroll-padding-inline-start\",\n    \"scroll-padding-inline-end\",\n  ],\n  \"scroll-snap-margin\": [\n    \"scroll-snap-margin-top\",\n    \"scroll-snap-margin-right\",\n    \"scroll-snap-margin-bottom\",\n    \"scroll-snap-margin-left\",\n  ],\n  \"scroll-snap-margin-block\": [\n    \"scroll-snap-margin-block-start\",\n    \"scroll-snap-margin-block-end\",\n  ],\n  \"scroll-snap-margin-inline\": [\n    \"scroll-snap-margin-inline-start\",\n    \"scroll-snap-margin-inline-end\",\n  ],\n\n  // CSS Speech Module: https://www.w3.org/TR/css3-speech/\n  cue: [\"cue-before\", \"cue-after\"],\n  pause: [\"pause-before\", \"pause-after\"],\n  rest: [\"rest-before\", \"rest-after\"],\n\n  // CSS Text Decoration Module Level 3: https://www.w3.org/TR/css-text-decor-3/\n  \"text-decoration\": [\n    \"text-decoration-line\",\n    \"text-decoration-style\",\n    \"text-decoration-color\",\n  ],\n  \"text-emphasis\": [\"text-emphasis-style\", \"text-emphasis-color\"],\n\n  // CSS Animations (WD): https://www.w3.org/TR/css3-animations\n  animation: [\n    \"animation-name\",\n    \"animation-duration\",\n    \"animation-timing-function\",\n    \"animation-delay\",\n    \"animation-iteration-count\",\n    \"animation-direction\",\n    \"animation-fill-mode\",\n    \"animation-play-state\",\n  ],\n\n  // CSS Transitions (WD): https://www.w3.org/TR/css3-transitions/\n  transition: [\n    \"transition-property\",\n    \"transition-duration\",\n    \"transition-timing-function\",\n    \"transition-delay\",\n  ],\n};\n\nexport function validateNoMixedHand(style: Object) {\n  const hyphenatedProperties = Object.keys(style).reduce((acc, property) => {\n    acc[hyphenate(property)] = property;\n    return acc;\n  }, {});\n\n  const mixed = [];\n  for (const property in hyphenatedProperties) {\n    if (property in shorthandMap) {\n      for (const longhand of shorthandMap[property]) {\n        if (longhand in hyphenatedProperties) {\n          const long = hyphenatedProperties[longhand];\n          const short = hyphenatedProperties[property];\n          mixed.push({\n            shorthand: {property: short, value: style[short]},\n            longhand: {property: long, value: style[long]},\n          });\n        }\n      }\n    }\n  }\n  return mixed;\n}\n","// @flow\n\ndeclare var __DEV__: boolean;\n\nimport hyphenate from \"./hyphenate-style-name.js\";\nimport {validateNoMixedHand} from \"./validate-no-mixed-hand.js\";\nimport {prefix} from \"inline-style-prefixer\";\n\nimport type {StyleObject} from \"styletron-standard\";\n\nimport {MultiCache} from \"./cache.js\";\n\nexport default function injectStylePrefixed(\n  styleCache: MultiCache<{pseudo: string, block: string}>,\n  styles: StyleObject,\n  media: string,\n  pseudo: string,\n) {\n  const cache = styleCache.getCache(media);\n  let classString = \"\";\n  for (const originalKey in styles) {\n    const originalVal = styles[originalKey];\n\n    if (originalVal === void 0 || originalVal === null) {\n      continue;\n    }\n    if (typeof originalVal !== \"object\") {\n      // Non-null and non-undefined primitive value\n      if (__DEV__) {\n        validateValueType(originalVal, originalKey);\n      }\n\n      const propValPair = `${hyphenate(\n        originalKey,\n      )}:${((originalVal: any): string)}`;\n      const key = `${pseudo}${propValPair}`;\n      const cachedId = cache.cache[key];\n      if (cachedId !== void 0) {\n        // cache hit\n        classString += \" \" + cachedId;\n        continue;\n      } else {\n        // cache miss\n        let block = \"\";\n        const prefixed = prefix({[originalKey]: originalVal});\n        for (const prefixedKey in prefixed) {\n          const prefixedVal = prefixed[prefixedKey];\n          const prefixedValType = typeof prefixedVal;\n          if (prefixedValType === \"string\" || prefixedValType === \"number\") {\n            const prefixedPair = `${hyphenate(prefixedKey)}:${prefixedVal}`;\n            if (prefixedPair !== propValPair) {\n              block += `${prefixedPair};`;\n            }\n          } else if (Array.isArray(prefixedVal)) {\n            const hyphenated = hyphenate(prefixedKey);\n            for (let i = 0; i < prefixedVal.length; i++) {\n              const prefixedPair = `${hyphenated}:${prefixedVal[i]}`;\n              if (prefixedPair !== propValPair) {\n                block += `${prefixedPair};`;\n              }\n            }\n          }\n        }\n        block += propValPair; // ensure original prop/val is last (for hydration)\n        const id = cache.addValue(key, {pseudo, block});\n        classString += \" \" + id;\n      }\n    } else {\n      // Non-null object value\n      if (originalKey[0] === \":\") {\n        classString +=\n          \" \" +\n          injectStylePrefixed(\n            styleCache,\n            originalVal,\n            media,\n            pseudo + originalKey,\n          );\n      } else if (originalKey.substring(0, 6) === \"@media\") {\n        classString +=\n          \" \" +\n          injectStylePrefixed(\n            styleCache,\n            originalVal,\n            originalKey.substr(7),\n            pseudo,\n          );\n      }\n    }\n  }\n\n  if (__DEV__) {\n    const conflicts = validateNoMixedHand(styles);\n    if (conflicts.length) {\n      conflicts.forEach(({shorthand, longhand}) => {\n        const short = JSON.stringify({[shorthand.property]: shorthand.value});\n        const long = JSON.stringify({[longhand.property]: longhand.value});\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Styles \\`${short}\\` and \\`${long}\\` in object yielding class \"${classString.slice(\n            1,\n          )}\" may result in unexpected behavior. Mixing shorthand and longhand properties within the same style object is unsupported with atomic rendering.`,\n        );\n      });\n    }\n  }\n\n  // remove leading space\n  return classString.slice(1);\n}\n\nfunction validateValueType(value, key) {\n  if (\n    value === null ||\n    Array.isArray(value) ||\n    (typeof value !== \"number\" && typeof value !== \"string\")\n  ) {\n    throw new Error(\n      `Unsupported style value: ${JSON.stringify(\n        value,\n      )} used in property ${JSON.stringify(key)}`,\n    );\n  }\n}\n","// @flow\n\n/* eslint-disable no-console */\n\nconst validAnimationState = /^(from|to|\\+?(\\d*\\.)?\\d+%)(\\s*,\\s*(from|to|\\+?(\\d*\\.)?\\d+%))*$/;\n\nexport default function validateKeyframesObject(keyframes: Object) {\n  let valid = true;\n  for (const animationState in keyframes) {\n    const value = keyframes[animationState];\n    if (!validAnimationState.test(animationState)) {\n      valid = false;\n      console.warn(\n        `Warning: property \"${animationState}\" in keyframes object ${JSON.stringify(\n          keyframes,\n        )} is not a valid. Must be \"from\", \"to\", or a percentage.`,\n      );\n    }\n    if (typeof value !== \"object\") {\n      valid = false;\n      console.warn(\n        `Warning: value for \"${animationState}\" property in keyframes object ${JSON.stringify(\n          keyframes,\n        )} must be an object. Instead it was a ${typeof value}.`,\n      );\n    }\n    if (!valid) {\n      console.warn(\n        `Warning: object used as value for \"animationName\" style is invalid:`,\n        keyframes,\n      );\n    }\n  }\n}\n","// @flow\n\ndeclare var __DEV__: boolean;\n\nimport hyphenate from \"./hyphenate-style-name.js\";\nimport validateKeyframesObject from \"./validate-keyframes-object.js\";\n\nexport function atomicSelector(id: string, pseudo: string): string {\n  let selector = `.${id}`;\n  if (pseudo) {\n    selector += pseudo;\n  }\n  return selector;\n}\n\nexport function keyframesToBlock(keyframes: {[string]: Object}): string {\n  if (__DEV__) {\n    validateKeyframesObject(keyframes);\n  }\n  if (__DEV__ && typeof Object.getPrototypeOf(keyframes) !== \"undefined\") {\n    if (Object.getPrototypeOf(keyframes) !== Object.getPrototypeOf({})) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"Only plain objects should be used as animation values. Unexpectedly recieved:\",\n        keyframes,\n      );\n    }\n  }\n  let result = \"\";\n  for (const animationState in keyframes) {\n    result += `${animationState}{${declarationsToBlock(\n      keyframes[animationState],\n    )}}`;\n  }\n  return result;\n}\n\nexport function declarationsToBlock(style: Object): string {\n  let css = \"\";\n  for (const prop in style) {\n    const val = style[prop];\n    if (typeof val === \"string\" || typeof val === \"number\") {\n      css += `${hyphenate(prop)}:${val};`;\n    }\n  }\n  // trim trailing semicolon\n  return css.slice(0, -1);\n}\n\nexport function keyframesBlockToRule(id: string, block: string): string {\n  return `@keyframes ${id}{${block}}`;\n}\n\nexport function fontFaceBlockToRule(id: string, block: string): string {\n  return `@font-face{font-family:${id};${block}}`;\n}\n\nexport function styleBlockToRule(selector: string, block: string): string {\n  return `${selector}{${block}}`;\n}\n","/* eslint-env browser */\nexport const insertRuleIntoDevtools = (selector, block) => {\n  // start after the . combinator and cut at the first : if there is one to cut out the pseudo classes\n  const key = selector.substring(\n    1,\n    selector.indexOf(\":\") !== -1 ? selector.indexOf(\":\") : selector.length,\n  );\n  const styles = {};\n  // split the declaration to catch vendor prefixing\n  for (const decl of block.split(\";\")) {\n    if (decl.trim() !== \"\" && !window.__STYLETRON_DEVTOOLS__.atomicMap[key])\n      styles[decl.substring(0, decl.indexOf(\":\"))] = decl.substring(\n        decl.indexOf(\":\") + 1,\n        decl.length,\n      );\n  }\n\n  window.__STYLETRON_DEVTOOLS__.atomicMap[key] = styles;\n};\n\nexport const hydrateDevtoolsRule = cssString => {\n  const id = cssString.substring(0, 3);\n  const block = cssString.substring(4, cssString.length - 1);\n  insertRuleIntoDevtools(id, block);\n};\n","// @flow\n\n/* eslint-env browser */\n\ndeclare var __DEV__: boolean;\ndeclare var __BROWSER__: boolean;\n\nconst STYLES_HYDRATOR = /\\.([^{:]+)(:[^{]+)?{(?:[^}]*;)?([^}]*?)}/g;\nconst KEYFRAMES_HYRDATOR = /@keyframes ([^{]+){((?:(?:from|to|(?:\\d+\\.?\\d*%))\\{(?:[^}])*})*)}/g;\nconst FONT_FACE_HYDRATOR = /@font-face\\{font-family:([^;]+);([^}]*)\\}/g;\n\ntype hydratorT =\n  | typeof STYLES_HYDRATOR\n  | typeof KEYFRAMES_HYRDATOR\n  | typeof FONT_FACE_HYDRATOR;\n\nfunction hydrateStyles<T>(cache: Cache<T>, hydrator: hydratorT, css: string) {\n  let match;\n  while ((match = hydrator.exec(css))) {\n    const [, id, pseudo, key] = match;\n    if (__BROWSER__ && __DEV__ && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n    const fullKey = pseudo ? `${pseudo}${key}` : key;\n    cache.cache[fullKey] = id; // set cache without triggering side effects\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nfunction hydrate<T>(cache: Cache<T>, hydrator: hydratorT, css: string) {\n  let match;\n  while ((match = hydrator.exec(css))) {\n    const [, id, key] = match;\n    if (__BROWSER__ && __DEV__ && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n    cache.cache[key] = id; // set cache without triggering side effects\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nimport SequentialIDGenerator from \"../sequential-id-generator.js\";\n\nimport type {\n  StandardEngine,\n  KeyframesObject,\n  FontFaceObject,\n  StyleObject,\n} from \"styletron-standard\";\n\nimport {Cache, MultiCache} from \"../cache.js\";\n\nimport injectStylePrefixed from \"../inject-style-prefixed.js\";\n\nimport {\n  styleBlockToRule,\n  atomicSelector,\n  keyframesBlockToRule,\n  declarationsToBlock,\n  keyframesToBlock,\n  fontFaceBlockToRule,\n} from \"../css.js\";\nimport {insertRuleIntoDevtools, hydrateDevtoolsRule} from \"../dev-tool.js\";\n\ntype hydrateT =\n  | HTMLCollection<HTMLStyleElement>\n  | Array<HTMLStyleElement>\n  | NodeList<HTMLStyleElement>;\n\ntype optionsT = {\n  hydrate?: hydrateT,\n  container?: Element,\n  prefix?: string,\n};\n\nclass StyletronClient implements StandardEngine {\n  container: Element;\n  styleElements: {[string]: HTMLStyleElement};\n  fontFaceSheet: HTMLStyleElement;\n  keyframesSheet: HTMLStyleElement;\n\n  styleCache: MultiCache<{pseudo: string, block: string}>;\n  keyframesCache: Cache<KeyframesObject>;\n  fontFaceCache: Cache<FontFaceObject>;\n\n  constructor(opts?: optionsT = {}) {\n    this.styleElements = {};\n\n    const styleIdGenerator = new SequentialIDGenerator(opts.prefix);\n    const onNewStyle = (cache, id, value) => {\n      const {pseudo, block} = value;\n      const sheet: CSSStyleSheet = (this.styleElements[cache.key].sheet: any);\n      const selector = atomicSelector(id, pseudo);\n      const rule = styleBlockToRule(selector, block);\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n        if (__BROWSER__ && __DEV__ && window.__STYLETRON_DEVTOOLS__) {\n          insertRuleIntoDevtools(selector, block);\n        }\n      } catch (e) {\n        if (__DEV__) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Failed to inject CSS: \"${rule}\". Perhaps this has invalid or un-prefixed properties?`,\n          );\n        }\n      }\n    };\n\n    // Setup style cache\n    this.styleCache = new MultiCache(\n      styleIdGenerator,\n      (media, _cache, insertBeforeMedia) => {\n        const styleElement = document.createElement(\"style\");\n        styleElement.media = media;\n        if (insertBeforeMedia === void 0) {\n          this.container.appendChild(styleElement);\n        } else {\n          const insertBeforeIndex = findSheetIndexWithMedia(\n            this.container.children,\n            insertBeforeMedia,\n          );\n          this.container.insertBefore(\n            styleElement,\n            this.container.children[insertBeforeIndex],\n          );\n        }\n\n        this.styleElements[media] = styleElement;\n      },\n      onNewStyle,\n    );\n\n    this.keyframesCache = new Cache(\n      new SequentialIDGenerator(opts.prefix),\n      (cache, id, value) => {\n        this.styleCache.getCache(\"\");\n        const sheet: CSSStyleSheet = (this.styleElements[\"\"].sheet: any);\n        const rule = keyframesBlockToRule(id, keyframesToBlock(value));\n        try {\n          sheet.insertRule(rule, sheet.cssRules.length);\n        } catch (e) {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `Failed to inject CSS: \"${rule}\". Perhaps this has invalid or un-prefixed properties?`,\n            );\n          }\n        }\n      },\n    );\n\n    this.fontFaceCache = new Cache(\n      new SequentialIDGenerator(opts.prefix),\n      (cache, id, value) => {\n        this.styleCache.getCache(\"\");\n        const sheet: CSSStyleSheet = (this.styleElements[\"\"].sheet: any);\n        const rule = fontFaceBlockToRule(id, declarationsToBlock(value));\n        try {\n          sheet.insertRule(rule, sheet.cssRules.length);\n        } catch (e) {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `Failed to inject CSS: \"${rule}\". Perhaps this has invalid or un-prefixed properties?`,\n            );\n          }\n        }\n      },\n    );\n\n    if (opts.container) {\n      this.container = opts.container;\n    }\n\n    // Hydrate\n    if (opts.hydrate && opts.hydrate.length > 0) {\n      // infer container from parent element\n      if (!this.container) {\n        const parentElement = opts.hydrate[0].parentElement;\n        if (parentElement !== null && parentElement !== void 0) {\n          this.container = parentElement;\n        }\n      }\n\n      for (let i = 0; i < opts.hydrate.length; i++) {\n        const element = opts.hydrate[i];\n        const hydrateType = element.getAttribute(\"data-hydrate\");\n        if (hydrateType === \"font-face\") {\n          hydrate(this.fontFaceCache, FONT_FACE_HYDRATOR, element.textContent);\n          continue;\n        }\n        if (hydrateType === \"keyframes\") {\n          hydrate(this.keyframesCache, KEYFRAMES_HYRDATOR, element.textContent);\n          continue;\n        }\n        const key = element.media ? element.media : \"\";\n        this.styleElements[key] = element;\n        const cache = new Cache(styleIdGenerator, onNewStyle);\n        cache.key = key;\n        hydrateStyles(cache, STYLES_HYDRATOR, element.textContent);\n        this.styleCache.sortedCacheKeys.push(key);\n        this.styleCache.caches[key] = cache;\n      }\n    }\n\n    if (!this.container) {\n      if (document.head === null) {\n        throw new Error(\"No container provided and `document.head` was null\");\n      }\n      this.container = document.head;\n    }\n  }\n\n  renderStyle(style: StyleObject): string {\n    return injectStylePrefixed(this.styleCache, style, \"\", \"\");\n  }\n\n  renderFontFace(fontFace: FontFaceObject): string {\n    const key = declarationsToBlock(fontFace);\n    return this.fontFaceCache.addValue(key, fontFace);\n  }\n\n  renderKeyframes(keyframes: KeyframesObject): string {\n    const key = keyframesToBlock(keyframes);\n    return this.keyframesCache.addValue(key, keyframes);\n  }\n}\n\nexport default StyletronClient;\n\nfunction findSheetIndexWithMedia(children, media) {\n  let index = 0;\n  for (; index < children.length; index++) {\n    const child = children[index];\n    if (\n      child.tagName === \"STYLE\" &&\n      ((child: any): HTMLStyleElement).media === media\n    ) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n","// @flow\n\nimport SequentialIDGenerator from \"../sequential-id-generator.js\";\n\nimport type {StandardEngine} from \"styletron-standard\";\n\nimport {Cache, MultiCache} from \"../cache.js\";\n\nimport injectStylePrefixed from \"../inject-style-prefixed.js\";\n\nimport type {\n  StyleObject,\n  FontFaceObject,\n  KeyframesObject,\n} from \"styletron-standard\";\n\nimport {\n  styleBlockToRule,\n  atomicSelector,\n  keyframesBlockToRule,\n  declarationsToBlock,\n  keyframesToBlock,\n  fontFaceBlockToRule,\n} from \"../css.js\";\n\nexport type attrsT = {\n  \"data-hydrate\"?: \"keyframes\" | \"font-face\",\n  media?: string,\n  class?: string,\n};\n\nexport type sheetT = {|\n  css: string,\n  attrs: attrsT,\n|};\n\ntype optionsT = {\n  prefix?: string,\n};\n\nclass StyletronServer implements StandardEngine {\n  styleCache: MultiCache<{pseudo: string, block: string}>;\n  keyframesCache: Cache<KeyframesObject>;\n  fontFaceCache: Cache<FontFaceObject>;\n  styleRules: {[string]: string};\n  keyframesRules: string;\n  fontFaceRules: string;\n\n  constructor(opts?: optionsT = {}) {\n    this.styleRules = {\"\": \"\"};\n    this.styleCache = new MultiCache(\n      new SequentialIDGenerator(opts.prefix),\n      media => {\n        this.styleRules[media] = \"\";\n      },\n      (cache, id, value) => {\n        const {pseudo, block} = value;\n        this.styleRules[cache.key] += styleBlockToRule(\n          atomicSelector(id, pseudo),\n          block,\n        );\n      },\n    );\n\n    this.fontFaceRules = \"\";\n    this.fontFaceCache = new Cache(\n      new SequentialIDGenerator(opts.prefix),\n      (cache, id, value) => {\n        this.fontFaceRules += fontFaceBlockToRule(\n          id,\n          declarationsToBlock(value),\n        );\n      },\n    );\n\n    this.keyframesRules = \"\";\n    this.keyframesCache = new Cache(\n      new SequentialIDGenerator(opts.prefix),\n      (cache, id, value) => {\n        this.keyframesRules += keyframesBlockToRule(\n          id,\n          keyframesToBlock(value),\n        );\n      },\n    );\n  }\n\n  renderStyle(style: StyleObject): string {\n    return injectStylePrefixed(this.styleCache, style, \"\", \"\");\n  }\n\n  renderFontFace(fontFace: FontFaceObject): string {\n    const key = JSON.stringify(fontFace);\n    return this.fontFaceCache.addValue(key, fontFace);\n  }\n\n  renderKeyframes(keyframes: KeyframesObject): string {\n    const key = JSON.stringify(keyframes);\n    return this.keyframesCache.addValue(key, keyframes);\n  }\n\n  getStylesheets(): Array<sheetT> {\n    return [\n      ...(this.keyframesRules.length\n        ? [\n            {\n              css: this.keyframesRules,\n              attrs: {\"data-hydrate\": \"keyframes\"},\n            },\n          ]\n        : []),\n      ...(this.fontFaceRules.length\n        ? [\n            {\n              css: this.fontFaceRules,\n              attrs: {\"data-hydrate\": \"font-face\"},\n            },\n          ]\n        : []),\n      ...sheetify(this.styleRules, this.styleCache.getSortedCacheKeys()),\n    ];\n  }\n\n  getStylesheetsHtml(className?: string = \"_styletron_hydrate_\") {\n    return generateHtmlString(this.getStylesheets(), className);\n  }\n\n  getCss() {\n    return (\n      this.keyframesRules +\n      this.fontFaceRules +\n      stringify(this.styleRules, this.styleCache.getSortedCacheKeys())\n    );\n  }\n}\n\nexport function generateHtmlString(sheets: Array<sheetT>, className: string) {\n  let html = \"\";\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    const {class: originalClassName, ...rest} = sheet.attrs;\n    const attrs = {\n      class: originalClassName\n        ? `${className} ${originalClassName}`\n        : className,\n      ...(rest: attrsT),\n    };\n    html += `<style${attrsToString(attrs)}>${sheet.css}</style>`;\n  }\n  return html;\n}\n\nfunction attrsToString(attrs: attrsT) {\n  let result = \"\";\n  for (const attr in attrs) {\n    const value = attrs[attr];\n    if (value === true) {\n      result += \" \" + attr;\n    } else if (value !== false) {\n      result += ` ${attr}=\"${value}\"`;\n    }\n  }\n  return result;\n}\n\nfunction stringify(styleRules, sortedCacheKeys) {\n  let result = \"\";\n  sortedCacheKeys.forEach(cacheKey => {\n    const rules = styleRules[cacheKey];\n    if (cacheKey !== \"\") {\n      result += `@media ${cacheKey}{${rules}}`;\n    } else {\n      result += rules;\n    }\n  });\n  return result;\n}\n\nfunction sheetify(styleRules, sortedCacheKeys): Array<sheetT> {\n  if (sortedCacheKeys.length === 0) {\n    return [{css: \"\", attrs: {}}];\n  }\n  const sheets = [];\n  sortedCacheKeys.forEach(cacheKey => {\n    // omit media (cacheKey) attribute if empty\n    const attrs = cacheKey === \"\" ? {} : {media: cacheKey};\n    sheets.push({css: styleRules[cacheKey], attrs});\n  });\n  return sheets;\n}\n\nexport default StyletronServer;\n"]},"metadata":{},"sourceType":"module"}