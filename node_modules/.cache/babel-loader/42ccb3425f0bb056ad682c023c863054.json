{"ast":null,"code":"/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nexport function hexToRgb() {\n  var hex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1';\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? \"rgba(\".concat(parseInt(result[1], 16), \", \").concat(parseInt(result[2], 16), \", \").concat(parseInt(result[3], 16), \", \").concat(alpha, \")\") : null;\n}\nexport var ellipsisText = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n  wordWrap: 'normal'\n};\nexport function expandBorderStyles(borderStyles) {\n  return {\n    borderTopWidth: borderStyles.borderWidth,\n    borderTopStyle: borderStyles.borderStyle,\n    borderTopColor: borderStyles.borderColor,\n    borderBottomWidth: borderStyles.borderWidth,\n    borderBottomStyle: borderStyles.borderStyle,\n    borderBottomColor: borderStyles.borderColor,\n    borderLeftWidth: borderStyles.borderWidth,\n    borderLeftStyle: borderStyles.borderStyle,\n    borderLeftColor: borderStyles.borderColor,\n    borderRightWidth: borderStyles.borderWidth,\n    borderRightStyle: borderStyles.borderStyle,\n    borderRightColor: borderStyles.borderColor\n  };\n}","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/Portfolio/node_modules/baseui/esm/styles/util.js"],"names":["hexToRgb","hex","arguments","length","undefined","alpha","shorthandRegex","replace","m","r","g","b","result","exec","concat","parseInt","ellipsisText","overflow","textOverflow","whiteSpace","wordWrap","expandBorderStyles","borderStyles","borderTopWidth","borderWidth","borderTopStyle","borderStyle","borderTopColor","borderColor","borderBottomWidth","borderBottomStyle","borderBottomColor","borderLeftWidth","borderLeftStyle","borderLeftColor","borderRightWidth","borderRightStyle","borderRightColor"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,QAAT,GAAoB;AACzB,MAAIC,GAAG,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA9E;AACA,MAAIG,KAAK,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,GAAhF;AACA,MAAII,cAAc,GAAG,kCAArB;AACAL,EAAAA,GAAG,GAAGA,GAAG,CAACM,OAAJ,CAAYD,cAAZ,EAA4B,UAAUE,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACtD,WAAOF,CAAC,GAAGA,CAAJ,GAAQC,CAAR,GAAYA,CAAZ,GAAgBC,CAAhB,GAAoBA,CAA3B;AACD,GAFK,CAAN;AAGA,MAAIC,MAAM,GAAG,4CAA4CC,IAA5C,CAAiDZ,GAAjD,CAAb;AACA,SAAOW,MAAM,GAAG,QAAQE,MAAR,CAAeC,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAvB,EAAwC,IAAxC,EAA8CE,MAA9C,CAAqDC,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAA7D,EAA8E,IAA9E,EAAoFE,MAApF,CAA2FC,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAnG,EAAoH,IAApH,EAA0HE,MAA1H,CAAiIT,KAAjI,EAAwI,GAAxI,CAAH,GAAkJ,IAA/J;AACD;AACD,OAAO,IAAIW,YAAY,GAAG;AACxBC,EAAAA,QAAQ,EAAE,QADc;AAExBC,EAAAA,YAAY,EAAE,UAFU;AAGxBC,EAAAA,UAAU,EAAE,QAHY;AAIxBC,EAAAA,QAAQ,EAAE;AAJc,CAAnB;AAMP,OAAO,SAASC,kBAAT,CAA4BC,YAA5B,EAA0C;AAC/C,SAAO;AACLC,IAAAA,cAAc,EAAED,YAAY,CAACE,WADxB;AAELC,IAAAA,cAAc,EAAEH,YAAY,CAACI,WAFxB;AAGLC,IAAAA,cAAc,EAAEL,YAAY,CAACM,WAHxB;AAILC,IAAAA,iBAAiB,EAAEP,YAAY,CAACE,WAJ3B;AAKLM,IAAAA,iBAAiB,EAAER,YAAY,CAACI,WAL3B;AAMLK,IAAAA,iBAAiB,EAAET,YAAY,CAACM,WAN3B;AAOLI,IAAAA,eAAe,EAAEV,YAAY,CAACE,WAPzB;AAQLS,IAAAA,eAAe,EAAEX,YAAY,CAACI,WARzB;AASLQ,IAAAA,eAAe,EAAEZ,YAAY,CAACM,WATzB;AAULO,IAAAA,gBAAgB,EAAEb,YAAY,CAACE,WAV1B;AAWLY,IAAAA,gBAAgB,EAAEd,YAAY,CAACI,WAX1B;AAYLW,IAAAA,gBAAgB,EAAEf,YAAY,CAACM;AAZ1B,GAAP;AAcD","sourcesContent":["/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nexport function hexToRgb() {\n  var hex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1';\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? \"rgba(\".concat(parseInt(result[1], 16), \", \").concat(parseInt(result[2], 16), \", \").concat(parseInt(result[3], 16), \", \").concat(alpha, \")\") : null;\n}\nexport var ellipsisText = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n  wordWrap: 'normal'\n};\nexport function expandBorderStyles(borderStyles) {\n  return {\n    borderTopWidth: borderStyles.borderWidth,\n    borderTopStyle: borderStyles.borderStyle,\n    borderTopColor: borderStyles.borderColor,\n    borderBottomWidth: borderStyles.borderWidth,\n    borderBottomStyle: borderStyles.borderStyle,\n    borderBottomColor: borderStyles.borderColor,\n    borderLeftWidth: borderStyles.borderWidth,\n    borderLeftStyle: borderStyles.borderStyle,\n    borderLeftColor: borderStyles.borderColor,\n    borderRightWidth: borderStyles.borderWidth,\n    borderRightStyle: borderStyles.borderStyle,\n    borderRightColor: borderStyles.borderColor\n  };\n}"]},"metadata":{},"sourceType":"module"}